{
    "version": 3,
    "file": "WithRemoteConfig.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/WithRemoteConfig.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * 一个可以拉取远程配置的 HOC\n *\n */\nimport React from 'react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport {Api, Payload} from '../types';\nimport {SchemaApi, SchemaTokenizeableString} from '../Schema';\nimport {withStore} from './WithStore';\n\nimport {EnvContext, RendererEnv} from '../env';\n\nimport {flow, Instance, types} from 'mobx-state-tree';\nimport {buildApi, isEffectiveApi, normalizeApi} from '../utils/api';\nimport {\n  isPureVariable,\n  resolveVariableAndFilter,\n  tokenize\n} from '../utils/tpl-builtin';\nimport {reaction} from 'mobx';\n\nexport const Store = types\n  .model('OptionsStore')\n  .props({\n    fetching: false,\n    errorMsg: '',\n    config: types.frozen(),\n    data: types.frozen({})\n  })\n  .actions(self => {\n    const load: (\n      env: RendererEnv,\n      api: Api,\n      data: any,\n      config: WithRemoteConfigSettings\n    ) => Promise<any> = flow(function* (env, api, data, config = {}) {\n      try {\n        self.fetching = true;\n        const ret: Payload = yield env.fetcher(api, data);\n\n        if (ret.ok) {\n          const data = ret.data || {};\n          let options = config.adaptor ? config.adaptor(data) : data;\n          (self as any).setConfig(options, config);\n        } else {\n          throw new Error(ret.msg || 'fetch error');\n        }\n      } catch (e) {\n        self.errorMsg = e.message;\n      } finally {\n        self.fetching = false;\n      }\n    });\n\n    return {\n      load,\n      setData(data: any) {\n        self.data = data || {};\n      },\n      setConfig(options: any, config: WithRemoteConfigSettings) {\n        if (config.normalizeConfig) {\n          options = config.normalizeConfig(options, self.config) || options;\n        }\n\n        self.config = options;\n      }\n    };\n  });\n\nexport type IStore = Instance<typeof Store>;\n\nexport interface OutterProps {\n  env?: RendererEnv;\n  data: any;\n  source?: SchemaApi | SchemaTokenizeableString;\n}\n\nexport interface RemoteOptionsProps<T = any> {\n  config: T;\n  loading?: boolean;\n}\n\nexport interface WithRemoteConfigSettings {\n  configField?: string;\n  adaptor?: (json: any) => any;\n  normalizeConfig?: (config: any, origin: any) => any;\n}\n\nexport function withRemoteConfig<P = any>(\n  config: WithRemoteConfigSettings = {}\n) {\n  return function <\n    T extends React.ComponentType<\n      React.ComponentProps<T> & RemoteOptionsProps<P>\n    >\n  >(ComposedComponent: T) {\n    type FinalOutterProps = JSX.LibraryManagedAttributes<\n      T,\n      Omit<React.ComponentProps<T>, keyof RemoteOptionsProps<P>>\n    > &\n      OutterProps;\n\n    const result = hoistNonReactStatic(\n      withStore(() => Store.create())(\n        class extends React.Component<\n          FinalOutterProps & {\n            store: IStore;\n          }\n        > {\n          static displayName = `WithRemoteConfig(${\n            ComposedComponent.displayName || ComposedComponent.name\n          })`;\n          static ComposedComponent = ComposedComponent;\n          static contextType = EnvContext;\n          toDispose: Array<() => void> = [];\n\n          componentDidMount() {\n            const env: RendererEnv = this.props.env || this.context;\n            const {store, source, data} = this.props;\n\n            store.setData(data);\n\n            if (isPureVariable(source)) {\n              this.syncOptions();\n              this.toDispose.push(\n                reaction(\n                  () =>\n                    resolveVariableAndFilter(\n                      source as string,\n                      store.data,\n                      '| raw'\n                    ),\n                  () => this.syncOptions()\n                )\n              );\n            } else if (env && isEffectiveApi(source, data)) {\n              this.loadOptions();\n              this.toDispose.push(\n                reaction(\n                  () => {\n                    const api = normalizeApi(source as string);\n                    return api.trackExpression\n                      ? tokenize(api.trackExpression, store.data)\n                      : buildApi(api, store.data, {\n                          ignoreData: true\n                        }).url;\n                  },\n                  () => this.loadOptions()\n                )\n              );\n            }\n          }\n\n          componentDidUpdate(prevProps: any) {\n            const props = this.props;\n\n            if (props.data !== prevProps.data) {\n              props.store.setData(props.data);\n            }\n          }\n\n          componentWillUnmount() {\n            this.toDispose.forEach(fn => fn());\n            this.toDispose = [];\n          }\n\n          loadOptions() {\n            const env: RendererEnv = this.props.env || this.context;\n            const {store, source, data} = this.props;\n\n            if (env && isEffectiveApi(source, data)) {\n              store.load(env, source, data, config);\n            }\n          }\n\n          syncOptions() {\n            const {store, source, data} = this.props;\n\n            if (isPureVariable(source)) {\n              store.setConfig(\n                resolveVariableAndFilter(source as string, data, '| raw') || [],\n                config\n              );\n            }\n          }\n\n          render() {\n            const store = this.props.store;\n            const injectedProps: RemoteOptionsProps<P> = {\n              config: store.config,\n              loading: store.fetching\n            };\n\n            return (\n              <ComposedComponent\n                {...(this.props as JSX.LibraryManagedAttributes<\n                  T,\n                  React.ComponentProps<T>\n                >)}\n                {...injectedProps}\n              />\n            );\n          }\n        }\n      ),\n      ComposedComponent\n    );\n\n    return result as typeof result & {\n      ComposedComponent: T;\n    };\n  };\n}\n"
    ]
}