{"remainingRequest":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\babel-loader\\lib\\index.js??ref--5-1!C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\@ovine\\core\\lib\\routes\\limit\\exports.js","dependencies":[{"path":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\@ovine\\core\\lib\\routes\\limit\\exports.js","mtime":1618319234665},{"path":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616400859944},{"path":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1617798315061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEFQUCDmnYPpmZDnm7jlhbPlt6Xlhbfmlrnms5UKICovCmltcG9ydCBpc0FycmF5IGZyb20gJ2xvZGFzaC9pc0FycmF5JzsKaW1wb3J0IHsgYXBwIH0gZnJvbSAiLi4vLi4vYXBwIjsKaW1wb3J0IGxvZ2dlciBmcm9tICIuLi8uLi91dGlscy9sb2dnZXIiOwppbXBvcnQgeyBpc1N1YlN0ciB9IGZyb20gIi4uLy4uL3V0aWxzL3Rvb2wiOwp2YXIgc3RvcmUgPSB7fTsKdmFyIGxvZyA9IGxvZ2dlci5nZXRMb2dnZXIoJ2xpYjpyb3V0ZXM6bGltaXQ6ZXhwb3J0cycpOyAvLyDlsIblrZfnrKbkuLLmoLzlvI/nmoTmnYPpmZDmlbDmja7vvIzovazkuLrlr7nosaHnsbvlnovvvIzlj6/lpKflpKflh4/lsJHmnYPpmZDljLnphY3nmoTml7bpl7QKCmV4cG9ydCB2YXIgY29udmVydExpbWl0U3RyID0gZnVuY3Rpb24gY29udmVydExpbWl0U3RyKCkgewogIHZhciBsaW1pdFN0ciA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogJyc7CgogIGlmIChsaW1pdFN0ciA9PT0gYXBwLmNvbnN0YW50cy5yb290TGltaXRGbGFnKSB7CiAgICByZXR1cm4gewogICAgICBbYXBwLmNvbnN0YW50cy5yb290TGltaXRGbGFnXTogdHJ1ZQogICAgfTsKICB9CgogIHZhciB0cGwgPSB7fTsKICB2YXIgbGltaXRzID0gbGltaXRTdHIgPT09IG51bGwgfHwgbGltaXRTdHIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGxpbWl0U3RyLnNwbGl0KCcsJyk7CiAgbGltaXRzID09PSBudWxsIHx8IGxpbWl0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogbGltaXRzLmZvckVhY2goa2V5ID0+IHsKICAgIHRwbFtrZXldID0gdHJ1ZTsKICB9KTsKICByZXR1cm4gdHBsOwp9OwpleHBvcnQgdmFyIHNldEFwcExpbWl0cyA9IGxpbWl0U3RyID0+IHsKICBzdG9yZSA9IGNvbnZlcnRMaW1pdFN0cihsaW1pdFN0cik7Cn07CmV4cG9ydCB2YXIgZ2V0QXBwTGltaXRzID0gKCkgPT4gc3RvcmU7Ci8qKgogKiDlvqrnjq/osIPnlKjml7bkuIDlrpropoEsIOS8oCBsaW1pdHMg5Y+C5pWwCiAqIEBwYXJhbSBub2RlUGF0aCDluKbmo4Dmn6XnmoToioLngrkKICogQHBhcmFtIGxpbWl0cyDmnYPpmZDmqKHniYjvvIznlKjmo4Dmn6XoioLngrkKICovCgpleHBvcnQgdmFyIGNoZWNrTGltaXRCeU5vZGVQYXRoID0gZnVuY3Rpb24gY2hlY2tMaW1pdEJ5Tm9kZVBhdGgobm9kZVBhdGgpIHsKICB2YXIgbGltaXRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBnZXRBcHBMaW1pdHMoKTsKCiAgLy8g5LiN6ZyA6KaB5qCh6aqM5p2D6ZmQIOWFqOmDqOi/lOWbniB0cnVlCiAgaWYgKGFwcC5lbnYuZGlzYWJsZUxpbWl0IHx8IGxpbWl0c1thcHAuY29uc3RhbnRzLnJvb3RMaW1pdEZsYWddKSB7CiAgICByZXR1cm4gdHJ1ZTsKICB9IC8vIOWtkOadg+mZkOWtmOWcqO+8jOeItuadg+mZkOS4gOWumuWtmOWcqAoKCiAgdmFyIHdpdGhBdXRoID0gbGltaXRzW25vZGVQYXRoXSB8fCBPYmplY3Qua2V5cyhsaW1pdHMpLnNvbWUoaSA9PiBpc1N1YlN0cihpLCAiIi5jb25jYXQobm9kZVBhdGgsICIvIiksIDApKTsKICByZXR1cm4gd2l0aEF1dGg7Cn07Ci8qKgogKiDmoKHpqozkuIDnu4TmnYPpmZAKICogQHBhcmFtIGxpbWl0S2V5cyDlj6/ku6XmmK/mnYPpmZAga2V5LOaIluiAhSBub2RlUGF0aOOAguW9k+S4uiBrZXkg5pe277yM5LiA5a6a6KaB5LygIG9wdGlvbi5ub2RlUGF0aAogKiBAcGFyYW0gb3B0aW9uIG5vZGVQYXRoIOagoemqjOiKgueCueOAgiBsaW1pdHMg5p2D6ZmQ5qih54mI77yM55So5qOA5p+l6IqC54K5CiAqLwoKZXhwb3J0IHZhciBjaGVja0xpbWl0QnlLZXlzID0gKGxpbWl0S2V5cywgb3B0aW9uKSA9PiB7CiAgaWYgKCFsaW1pdEtleXMpIHsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHZhciB7CiAgICBub2RlUGF0aCA9ICcnLAogICAgbGltaXRzCiAgfSA9IG9wdGlvbiB8fCB7fTsKICB2YXIgdGhpc0xpbWl0cyA9IGxpbWl0cyB8fCBnZXRBcHBMaW1pdHMoKTsKICB2YXIgY2hlY2tBciA9IHR5cGVvZiBsaW1pdEtleXMgPT09ICdzdHJpbmcnID8gW2xpbWl0S2V5c10gOiBsaW1pdEtleXM7CgogIGlmICghaXNBcnJheShjaGVja0FyKSkgewogICAgbG9nLndhcm4oJ2xpbWl0S2V5cyDlv4XpobvmmK/lrZfnrKbkuLLvvIzmiJbogIXlrZfnrKbkuLLmlbDnu4QnLCBsaW1pdEtleXMpOwogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgcmV0dXJuICEoY2hlY2tBciA9PT0gbnVsbCB8fCBjaGVja0FyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjaGVja0FyLnNvbWUoa2V5ID0+IHsKICAgIHZhciBjaGVja0tleSA9IGlzU3ViU3RyKGtleSwgJy8nKSA/IGtleSA6ICIiLmNvbmNhdChub2RlUGF0aCwgIi8iKS5jb25jYXQoa2V5KTsKICAgIHJldHVybiAhY2hlY2tMaW1pdEJ5Tm9kZVBhdGgoY2hlY2tLZXksIHRoaXNMaW1pdHMpOwogIH0pKTsKfTs="},{"version":3,"sources":["C:/Users/cwx/Desktop/editor-demo/node_modules/@ovine/core/lib/routes/limit/exports.js"],"names":["isArray","app","logger","isSubStr","store","log","getLogger","convertLimitStr","limitStr","constants","rootLimitFlag","tpl","limits","split","forEach","key","setAppLimits","getAppLimits","checkLimitByNodePath","nodePath","env","disableLimit","withAuth","Object","keys","some","i","checkLimitByKeys","limitKeys","option","thisLimits","checkAr","warn","checkKey"],"mappings":"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","sourcesContent":["/**\n * APP 权限相关工具方法\n */\nimport isArray from 'lodash/isArray';\nimport { app } from \"../../app\";\nimport logger from \"../../utils/logger\";\nimport { isSubStr } from \"../../utils/tool\";\nlet store = {};\nconst log = logger.getLogger('lib:routes:limit:exports');\n// 将字符串格式的权限数据，转为对象类型，可大大减少权限匹配的时间\nexport const convertLimitStr = (limitStr = '') => {\n    if (limitStr === app.constants.rootLimitFlag) {\n        return { [app.constants.rootLimitFlag]: true };\n    }\n    const tpl = {};\n    const limits = limitStr === null || limitStr === void 0 ? void 0 : limitStr.split(',');\n    limits === null || limits === void 0 ? void 0 : limits.forEach((key) => {\n        tpl[key] = true;\n    });\n    return tpl;\n};\nexport const setAppLimits = (limitStr) => {\n    store = convertLimitStr(limitStr);\n};\nexport const getAppLimits = () => store;\n/**\n * 循环调用时一定要, 传 limits 参数\n * @param nodePath 带检查的节点\n * @param limits 权限模版，用检查节点\n */\nexport const checkLimitByNodePath = (nodePath, limits = getAppLimits()) => {\n    // 不需要校验权限 全部返回 true\n    if (app.env.disableLimit || limits[app.constants.rootLimitFlag]) {\n        return true;\n    }\n    // 子权限存在，父权限一定存在\n    const withAuth = limits[nodePath] || Object.keys(limits).some((i) => isSubStr(i, `${nodePath}/`, 0));\n    return withAuth;\n};\n/**\n * 校验一组权限\n * @param limitKeys 可以是权限 key,或者 nodePath。当为 key 时，一定要传 option.nodePath\n * @param option nodePath 校验节点。 limits 权限模版，用检查节点\n */\nexport const checkLimitByKeys = (limitKeys, option) => {\n    if (!limitKeys) {\n        return false;\n    }\n    const { nodePath = '', limits } = option || {};\n    const thisLimits = limits || getAppLimits();\n    const checkAr = typeof limitKeys === 'string' ? [limitKeys] : limitKeys;\n    if (!isArray(checkAr)) {\n        log.warn('limitKeys 必须是字符串，或者字符串数组', limitKeys);\n        return false;\n    }\n    return !(checkAr === null || checkAr === void 0 ? void 0 : checkAr.some((key) => {\n        const checkKey = isSubStr(key, '/') ? key : `${nodePath}/${key}`;\n        return !checkLimitByNodePath(checkKey, thisLimits);\n    }));\n};\n"]}]}