{"remainingRequest":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\babel-loader\\lib\\index.js??ref--5-1!C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\@ovine\\core\\lib\\utils\\request\\index.js","dependencies":[{"path":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\@ovine\\core\\lib\\utils\\request\\index.js","mtime":1618319234665},{"path":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616400859944},{"path":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1617798315061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIOWwgeijhSBmZXRjaCDor7fmsYIKICovCnZhciBfX2F3YWl0ZXIgPSB0aGlzICYmIHRoaXMuX19hd2FpdGVyIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHsKICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgewogICAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgcmVzb2x2ZSh2YWx1ZSk7CiAgICB9KTsKICB9CgogIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7CiAgICAgIHRyeSB7CiAgICAgICAgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgcmVqZWN0KGUpOwogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsKICAgICAgdHJ5IHsKICAgICAgICBzdGVwKGdlbmVyYXRvclsidGhyb3ciXSh2YWx1ZSkpOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgcmVqZWN0KGUpOwogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsKICAgICAgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7CiAgICB9CgogICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpOwogIH0pOwp9OwovKiBlc2xpbnQtZGlzYWJsZSBjb25zaXN0ZW50LXJldHVybiAqLwoKCmltcG9ydCB7IGdldEFwaUNhY2hlLCBzZXRBcGlDYWNoZSB9IGZyb20gJ2FtaXMvbGliL3V0aWxzL2FwaSc7CmltcG9ydCB7IG9iamVjdDJmb3JtRGF0YSwgcXNzdHJpbmdpZnksIGhhc0ZpbGUsIGlzRW1wdHkgfSBmcm9tICdhbWlzL2xpYi91dGlscy9oZWxwZXInOwppbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdhbWlzL2xpYi91dGlscy90cGwnOwppbXBvcnQgeyBnZXQsIG1hcCwgaXNQbGFpbk9iamVjdCwgaXNGdW5jdGlvbiwgdG9VcHBlciwgcGljayB9IGZyb20gJ2xvZGFzaCc7CmltcG9ydCB7IHBhcnNlIH0gZnJvbSAncXMnOwppbXBvcnQgeyBmZXRjaCB9IGZyb20gJ3doYXR3Zy1mZXRjaCc7CmltcG9ydCBsb2dnZXIgZnJvbSAiLi4vbG9nZ2VyIjsKaW1wb3J0IHsgZ2V0U2Vzc2lvblN0b3JlLCBzZXRTZXNzaW9uU3RvcmUgfSBmcm9tICIuLi9zdG9yZSI7CmltcG9ydCB7IGlzRXhwaXJlZCwgcHJvbWlzZWRUaW1lb3V0LCBybVVybFJlcGVhdFNsYW50IH0gZnJvbSAiLi4vdG9vbCI7CmltcG9ydCB7IHNhdmVGaWxlIH0gZnJvbSAiLi4vZmlsZSI7CnZhciBsb2cgPSBsb2dnZXIuZ2V0TG9nZ2VyKCdsaWI6dXRpbHM6cmVxdWVzdCcpOyAvLyDor7fmsYLplJnor6/pm4bkuK3lpITnkIbvvIwg5b+F6aG7IHRocm93IOmUmeivrwoKZnVuY3Rpb24gcmVxdWVzdEVycm9yQ3RybChlcnJvciwgb3B0aW9uLCByZXNwb25zZSkgewogIC8vIGxvZy5pbmZvKCdyZXF1ZXN0RXJyb3JDdHJsJywgeyBlcnJvciwgb3B0aW9uLCByZXNwb25zZSB9KQogIHZhciBlcnJvclNvdXJjZSA9IHsKICAgIG9wdGlvbiwKICAgIHJlc3BvbnNlLAogICAgZXJyb3IKICB9OwogIHZhciB3aXRoSW5zRXJyb3JIb29rID0gdHJ1ZTsgLy8g5aaC5p6c6L+U5ZueIGZhbHNl77yM5YiZ5LiN6LCD55SoIOWFqOWxgOeahOmUmeivr+WkhOeQhgoKICBpZiAob3B0aW9uLm9uRXJyb3IpIHsKICAgIHdpdGhJbnNFcnJvckhvb2sgPSBvcHRpb24ub25FcnJvcihyZXNwb25zZSwgb3B0aW9uLCBlcnJvcik7CiAgfQoKICBpZiAod2l0aEluc0Vycm9ySG9vayAhPT0gZmFsc2UgJiYgdGhpcy5vbkVycm9yKSB7CiAgICB0aGlzLm9uRXJyb3IocmVzcG9uc2UsIG9wdGlvbiwgZXJyb3IpOwogIH0KCiAgaWYgKHRoaXMub25GaW5pc2gpIHsKICAgIHRoaXMub25GaW5pc2gocmVzcG9uc2UsIG9wdGlvbiwgZXJyb3IpOwogIH0KCiAgdGhyb3cgZXJyb3JTb3VyY2U7Cn0gLy8g6K+35rGC5oiQ5Yqf6ZuG5Lit5aSE55CGCgoKZnVuY3Rpb24gcmVxdWVzdFN1Y2Nlc3NDdHJsKHJlc3BvbnNlLCBvcHRpb24pIHsKICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgewogICAgaWYgKHRoaXMub25TdWNjZXNzKSB7CiAgICAgIHZhciByZXMgPSB3cmFwUmVzcG9uc2UocmVzcG9uc2UpOwogICAgICByZXNwb25zZS5kYXRhID0gdGhpcy5vblN1Y2Nlc3MocmVzLmRhdGEsIG9wdGlvbiwgcmVzKTsKICAgIH0KCiAgICBpZiAob3B0aW9uLm9uU3VjY2VzcykgewogICAgICB2YXIgX3JlcyA9IHdyYXBSZXNwb25zZShyZXNwb25zZSk7CgogICAgICByZXNwb25zZS5kYXRhID0geWllbGQgb3B0aW9uLm9uU3VjY2VzcyhfcmVzLmRhdGEsIG9wdGlvbiwgX3Jlcyk7CiAgICB9CgogICAgaWYgKHRoaXMub25GaW5pc2gpIHsKICAgICAgdGhpcy5vbkZpbmlzaCh3cmFwUmVzcG9uc2UocmVzcG9uc2UpLCBvcHRpb24pOwogICAgfQogIH0pOwp9IC8vIOaooeaLn+aVsOaNrgoKCmZ1bmN0aW9uIG1vY2tTb3VyY2VDdHJsKG9wdGlvbikgewogIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7CiAgICB2YXIgewogICAgICBtb2NrU291cmNlLAogICAgICBhcGksCiAgICAgIG1ldGhvZCwKICAgICAgdXJsLAogICAgICBtb2NrID0gdHJ1ZSwKICAgICAgbW9ja0RlbGF5ID0gMjAwCiAgICB9ID0gb3B0aW9uOwoKICAgIGlmICghdGhpcy5pc01vY2sgfHwgIW1vY2sgfHwgIW1vY2tTb3VyY2UpIHsKICAgICAgcmV0dXJuICdub25lJzsKICAgIH0KCiAgICB2YXIgYXBpU3RyID0gYXBpIHx8ICIiLmNvbmNhdChtZXRob2QsICIgIikuY29uY2F0KHVybCB8fCAnJyk7IC8vIG1vY2vmlbDmja7nlJ/miJDmlrnlvI8KCiAgICB2YXIgbW9ja1NvdXJjZUdlbiA9IGdldChtb2NrU291cmNlLCBhcGlTdHIpID8gbW9ja1NvdXJjZVthcGlTdHJdIDogbW9ja1NvdXJjZTsgLy8gbW9jayDljp/lp4vmlbDmja4KCiAgICB2YXIgZmFrZVJlcyA9IHt9OwogICAgZmFrZVJlcy5kYXRhID0gaXNGdW5jdGlvbihtb2NrU291cmNlR2VuKSA/IG1vY2tTb3VyY2VHZW4ob3B0aW9uKSA6IG1vY2tTb3VyY2VHZW47CiAgICB5aWVsZCByZXF1ZXN0U3VjY2Vzc0N0cmwuY2FsbCh0aGlzLCBmYWtlUmVzLCBvcHRpb24pOwoKICAgIGlmIChtb2NrRGVsYXkpIHsKICAgICAgeWllbGQgcHJvbWlzZWRUaW1lb3V0KG1vY2tEZWxheSk7CiAgICB9CgogICAgbG9nLmxvZygnbW9ja1NvdXJjZScsIG9wdGlvbi51cmwsIGZha2VSZXMuZGF0YSwgb3B0aW9uKTsKICAgIHJldHVybiBmYWtlUmVzOwogIH0pOwp9IC8vIOe8k+WtmOivt+axgiDlj6rnvJPlrZggR0VUIOivt+axggoKCmZ1bmN0aW9uIGNhY2hlU291cmNlQ3RybCh0eXBlLCBvcHRpb24sIHJlc291cmNlKSB7CiAgdmFyIHsKICAgIHVybCA9ICcnLAogICAgZXhwaXJlZCA9IDAsCiAgICBtZXRob2QgPSAnR0VUJwogIH0gPSBvcHRpb24gfHwge307CgogIGlmICghZXhwaXJlZCB8fCBtZXRob2QgIT09ICdHRVQnKSB7CiAgICByZXR1cm47CiAgfQoKICB2YXIgdGltZXN0YW1wS2V5ID0gIiIuY29uY2F0KHVybCwgIjp0aW1lc3RhbXAiKTsKCiAgaWYgKHR5cGUgPT09ICdzZXQnKSB7CiAgICAvLyDkuI3lrZjlnKggcmVzb3VyY2Ug55u05o6l6L+U5ZueCiAgICBpZiAoIXJlc291cmNlKSB7CiAgICAgIHJldHVybjsKICAgIH0gLy8g5omA5pyJ5pWw5o2u5oyJ54WnIOWtl+espuS4sue8k+WtmAoKCiAgICBzZXRTZXNzaW9uU3RvcmUodXJsLCByZXNvdXJjZSk7CiAgICBzZXRTZXNzaW9uU3RvcmUodGltZXN0YW1wS2V5LCAoRGF0ZS5ub3coKSArIGV4cGlyZWQpLnRvU3RyaW5nKCkpOwogICAgcmV0dXJuOwogIH0KCiAgaWYgKHR5cGUgPT09ICdnZXQnKSB7CiAgICB2YXIgY2FjaGVkID0gZ2V0U2Vzc2lvblN0b3JlKHVybCk7CiAgICB2YXIgd2hlbkV4cGlyZWQgPSBnZXRTZXNzaW9uU3RvcmUodGltZXN0YW1wS2V5KTsKCiAgICBpZiAoY2FjaGVkICYmIHdoZW5FeHBpcmVkKSB7CiAgICAgIGlmICghaXNFeHBpcmVkKHdoZW5FeHBpcmVkKSkgewogICAgICAgIGxvZy5sb2coJ2V4cGlyZWRTb3VyY2UnLCBvcHRpb24udXJsLCBjYWNoZWQsIG9wdGlvbik7CiAgICAgICAgcmV0dXJuIGNhY2hlZDsKICAgICAgfQogICAgfQogIH0KfSAvLyDor7vlj5Zqc29u57uT5p6cLOmdnkpTT07nu5Pmnpwg5ZyoIHJlcXVlc3Qg5qih5Z2X5aSE55CGCgoKZnVuY3Rpb24gcmVhZEpzb25SZXNwb25zZShyZXNwb25zZSkgewogIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7CiAgICB0cnkgewogICAgICB2YXIgdGV4dCA9IHlpZWxkIHJlc3BvbnNlLnRleHQoKTsKICAgICAgcmVzcG9uc2UucmVzcG9uc2VUZXh0ID0gdGV4dDsKICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKHRleHQpOwogICAgICBkZWxldGUgcmVzcG9uc2UucmVzcG9uc2VUZXh0OyAvLyDlpoLmnpzop6PmnpDmiJDlip8g5bCGcmVzcG9uc2VUZXh0IOWPguaVsOWIoOmZpAoKICAgICAgcmV0dXJuIGRhdGE7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIHJldHVybiB7fTsKICAgIH0KICB9KTsKfQoKZnVuY3Rpb24gc2F2ZUZpbGVGcm9tUmVzKG9wdGlvbnMpIHsKICB2YXIgewogICAgYmxvYiwKICAgIGRpc3Bvc2l0aW9uCiAgfSA9IG9wdGlvbnM7CiAgdmFyIGZpbGVOYW1lID0gZ2V0KC9maWxlbmFtZT0oLiopJC8uZXhlYyhkaXNwb3NpdGlvbiksICcxJykgfHwgdW5kZWZpbmVkOwogIHNhdmVGaWxlKGJsb2IsIGZpbGVOYW1lKTsKfSAvLyDlj5Hlh7ogZmV0Y2gg6K+35rGCCgoKZnVuY3Rpb24gZmV0Y2hTb3VyY2VDdHJsKG9wdGlvbikgewogIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7CiAgICB2YXIgewogICAgICB1cmwsCiAgICAgIGJvZHksCiAgICAgIGNvbmZpZywKICAgICAgcmVzcG9uc2VUeXBlCiAgICB9ID0gb3B0aW9uOwoKICAgIGlmIChjb25maWcub25VcGxvYWRQcm9ncmVzcyAmJiBib2R5ICYmIHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgdmFyIF9yZXN1bHQgPSB5aWVsZCB1cGxvYWRXaXRoUHJvZ3Jlc3MuY2FsbCh0aGlzLCBvcHRpb24pOwoKICAgICAgcmV0dXJuIF9yZXN1bHQ7CiAgICB9CgogICAgdmFyIHJlc3VsdCA9IHlpZWxkIGZldGNoKHVybCwgb3B0aW9uKS5jYXRjaChlcnJvciA9PiB7CiAgICAgIHJlcXVlc3RFcnJvckN0cmwuY2FsbCh0aGlzLCBlcnJvciwgb3B0aW9uLCB3cmFwUmVzcG9uc2UoKSk7CiAgICB9KS50aGVuKHJlc3BvbnNlID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsKICAgICAgLy8g5b2TIGZldGNoIOWPkeeUn+mUmeivr+aXtiDkuI3lgZrku7vkvZXlpITnkIYKICAgICAgaWYgKCFyZXNwb25zZSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIHN0YXR1cyA9IE51bWJlcihyZXNwb25zZS5zdGF0dXMpOwoKICAgICAgaWYgKHN0YXR1cyA8PSAxMDAgfHwgc3RhdHVzID49IDQwMCkgewogICAgICAgIHRyeSB7CiAgICAgICAgICByZXNwb25zZS5kYXRhID0geWllbGQgcmVhZEpzb25SZXNwb25zZShyZXNwb25zZSk7CiAgICAgICAgfSBjYXRjaCAoZSkgey8vCiAgICAgICAgfQoKICAgICAgICByZXF1ZXN0RXJyb3JDdHJsLmNhbGwodGhpcywgbmV3IEVycm9yKCdzdGF0dXMgPD0gMTAwIHx8IHN0YXR1cyA+PSA0MDAnKSwgb3B0aW9uLCB3cmFwUmVzcG9uc2UocmVzcG9uc2UpKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRyeSB7CiAgICAgICAgaWYgKHJlc3BvbnNlVHlwZSA9PT0gJ2Jsb2InIHx8IGNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICdibG9iJykgewogICAgICAgICAgdmFyIGJsb2IgPSB5aWVsZCByZXNwb25zZS5ibG9iKCk7CiAgICAgICAgICByZXNwb25zZS5kYXRhID0gewogICAgICAgICAgICBibG9iCiAgICAgICAgICB9OwogICAgICAgICAgc2F2ZUZpbGVGcm9tUmVzKHsKICAgICAgICAgICAgYmxvYiwKICAgICAgICAgICAgZGlzcG9zaXRpb246IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdDb250ZW50LURpc3Bvc2l0aW9uJykgfHwgJycKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXNwb25zZS5kYXRhID0geWllbGQgcmVhZEpzb25SZXNwb25zZShyZXNwb25zZSk7CiAgICAgICAgfQoKICAgICAgICB5aWVsZCByZXF1ZXN0U3VjY2Vzc0N0cmwuY2FsbCh0aGlzLCByZXNwb25zZSwgb3B0aW9uKTsKICAgICAgICByZXR1cm4gcmVzcG9uc2U7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgcmVxdWVzdEVycm9yQ3RybC5jYWxsKHRoaXMsIGVycm9yLCBvcHRpb24sIHdyYXBSZXNwb25zZShyZXNwb25zZSkpOwogICAgICB9CiAgICB9KSk7CiAgICByZXR1cm4gcmVzdWx0OwogIH0pOwp9CgpmdW5jdGlvbiBmYWtlU291cmNlQ3RybChvcHRpb24pIHsKICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgewogICAgdmFyIGZha2VSZXEgPSBvcHRpb24ub25GYWtlUmVxdWVzdDsKICAgIHZhciBmYWtlUmVzID0geWllbGQgZmFrZVJlcShvcHRpb24pOwogICAgdmFyIGZha2VSZXNwb25zZSA9IHdyYXBSZXNwb25zZShmYWtlUmVzKTsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IGZha2VSZXNwb25zZQogICAgfTsKICB9KTsKfSAvLyBmZXRjaCDmt7vliqAgb25VcGxvYWRQcm9ncmVzcyDmlK/mjIEKCgpmdW5jdGlvbiB1cGxvYWRXaXRoUHJvZ3Jlc3Mob3B0aW9uKSB7CiAgdmFyIGVycm9yQ3RybCA9IHJlcXVlc3RFcnJvckN0cmwuYmluZCh0aGlzKTsKICB2YXIgc3VjY2Vzc0N0cmwgPSByZXF1ZXN0U3VjY2Vzc0N0cmwuYmluZCh0aGlzKTsKICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICB2YXIgX2E7CgogICAgdmFyIHsKICAgICAgY29uZmlnLAogICAgICBtZXRob2QgPSAnJywKICAgICAgdXJsID0gJycsCiAgICAgIGhlYWRlcnMgPSB7fSwKICAgICAgYm9keQogICAgfSA9IG9wdGlvbjsKICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgIHhoci5vcGVuKG1ldGhvZC50b0xvd2VyQ2FzZSgpLCB1cmwsIHRydWUpOyAvLyDlhbzlrrkgd2l0aENyZWRlbnRpYWxzIOS4jiBjcmVkZW50aWFscyDlj4LmlbAKCiAgICB2YXIgY3JlZGVudGlhbHMgPSAoX2EgPSBvcHRpb24uZmV0Y2hPcHRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY3JlZGVudGlhbHM7CgogICAgaWYgKGNvbmZpZy53aXRoQ3JlZGVudGlhbHMgfHwgY3JlZGVudGlhbHMgJiYgY3JlZGVudGlhbHMgIT09ICdvbWl0JykgewogICAgICB4aHIud2l0aENyZWRlbnRpYWxzID0gdHJ1ZTsKICAgIH0KCiAgICBtYXAoaGVhZGVycywgKGhlYWRlciwga2V5KSA9PiB7CiAgICAgIGlmICh4aHIpIHsKICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihrZXksIGhlYWRlcik7CiAgICAgIH0KICAgIH0pOwoKICAgIGZ1bmN0aW9uIG9uWGhyRXJyb3Ioc3RhdHVzLCB0ZXh0KSB7CiAgICAgIGVycm9yQ3RybChuZXcgRXJyb3IodGV4dCksIG9wdGlvbiwgd3JhcFJlc3BvbnNlKHsKICAgICAgICBzdGF0dXMsCiAgICAgICAgZGF0YTogKHhociA9PT0gbnVsbCB8fCB4aHIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHhoci5yZXNwb25zZSkgfHwgKHhociA9PT0gbnVsbCB8fCB4aHIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHhoci5yZXNwb25zZVRleHQpLAogICAgICAgIHN0YXR1c1RleHQ6IHhociA9PT0gbnVsbCB8fCB4aHIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHhoci5zdGF0dXNUZXh0CiAgICAgIH0sIHRydWUpKTsKICAgICAgeGhyID0gbnVsbDsKICAgIH0KCiAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkgewogICAgICBpZiAoIXhociB8fCB4aHIucmVhZHlTdGF0ZSAhPT0gNCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKHhoci5zdGF0dXMgPT09IDAgJiYgISh4aHIucmVzcG9uc2VVUkwgJiYgeGhyLnJlc3BvbnNlVVJMLmluZGV4T2YoJ2ZpbGU6JykgPT09IDApKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgcmVzcG9uc2VIZWFkZXJzID0gKHhociA9PT0gbnVsbCB8fCB4aHIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSkgfHwge307CiAgICAgIHZhciByZXNwb25zZSA9IHsKICAgICAgICBkYXRhOiB4aHIucmVzcG9uc2UgfHwgeGhyLnJlc3BvbnNlVGV4dCwKICAgICAgICBzdGF0dXM6IHhoci5zdGF0dXMsCiAgICAgICAgc3RhdHVzVGV4dDogeGhyLnN0YXR1c1RleHQsCiAgICAgICAgaGVhZGVyczogcmVzcG9uc2VIZWFkZXJzCiAgICAgIH07CgogICAgICBpZiAodGhpcy5zdGF0dXMgPD0gMTAwIHx8IHRoaXMuc3RhdHVzID49IDQwMCkgewogICAgICAgIGVycm9yQ3RybChuZXcgRXJyb3IoJ3N0YXR1cyA8PSAxMDAgfHwgc3RhdHVzID49IDQwMCcpLCBvcHRpb24sIHdyYXBSZXNwb25zZShyZXNwb25zZSwgdHJ1ZSkpOwogICAgICB9IGVsc2UgewogICAgICAgIHN1Y2Nlc3NDdHJsKHdyYXBSZXNwb25zZShyZXNwb25zZSwgdHJ1ZSksIG9wdGlvbikudGhlbigoKSA9PiB7CiAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfTsKCiAgICB4aHIub25lcnJvciA9IGZ1bmN0aW9uICgpIHsKICAgICAgb25YaHJFcnJvcih0aGlzLnN0YXR1cywgJ05ldHdvcmsgRXJyb3InKTsKICAgIH07CgogICAgeGhyLm9udGltZW91dCA9IGZ1bmN0aW9uICgpIHsKICAgICAgb25YaHJFcnJvcih0aGlzLnN0YXR1cywgJ1RpbWVPdXQgRXJyb3InKTsKICAgIH07CgogICAgaWYgKHhoci51cGxvYWQgJiYgY29uZmlnLnVwbG9hZFByb2dyZXNzKSB7CiAgICAgIHhoci51cGxvYWQub25wcm9ncmVzcyA9IGNvbmZpZy51cGxvYWRQcm9ncmVzczsKICAgIH0KCiAgICB4aHIuc2VuZChib2R5KTsKICB9KTsKfSAvLyDojrflj5YgZmV0Y2gg5Y+C5pWwCgoKZnVuY3Rpb24gZ2V0RmV0Y2hPcHRpb24ob3B0aW9uKSB7CiAgdmFyIHsKICAgIGhlYWRlcnMsCiAgICBkYXRhLAogICAgYm9keSwKICAgIGZldGNoT3B0aW9ucywKICAgIGRhdGFUeXBlID0gJ2pzb24nLAogICAgcXNPcHRpb25zCiAgfSA9IG9wdGlvbjsKICB2YXIgewogICAgdXJsLAogICAgbWV0aG9kCiAgfSA9IGdldFVybEJ5T3B0aW9uLmNhbGwodGhpcywgb3B0aW9uKTsgLy8g6Ieq6KGM5a6e546w5Y+W5raI6K+35rGC55qE5Zue6LCDCgogIHZhciB7CiAgICBjYW5jZWxFeGVjdXRvciwKICAgIHdpdGhDcmVkZW50aWFscwogIH0gPSBvcHRpb24uY29uZmlnIHx8IHt9OwogIHZhciBzaWduYWwgPSBudWxsOwoKICBpZiAoY2FuY2VsRXhlY3V0b3IgJiYgdHlwZW9mIEFib3J0Q29udHJvbGxlciAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgIHZhciBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpOwogICAgc2lnbmFsID0gY29udHJvbGxlci5zaWduYWw7CiAgICBjYW5jZWxFeGVjdXRvcigoKSA9PiB7CiAgICAgIGNvbnRyb2xsZXIuYWJvcnQoKTsKICAgIH0pOwogIH0KICAvKioKICAgKiBhbWlzIGRhdGFUeXBlIOmAu+i+kQogICAqLwogIC8vIGZldGNoIOivt+axguWPguaVsOWwgeijhQoKCiAgdmFyIGZldGNoQm9keSA9IGJvZHk7CiAgdmFyIGZldGNoSGVhZGVycyA9IGhlYWRlcnM7CgogIGlmIChpc0VtcHR5KGZldGNoQm9keSkgJiYgZGF0YSAmJiAhL0dFVHxIRUFEfE9QVElPTlMvLnRlc3QobWV0aG9kKSkgewogICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBGb3JtRGF0YSB8fCBkYXRhIGluc3RhbmNlb2YgQmxvYiB8fCBkYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHsKICAgICAgZmV0Y2hCb2R5ID0gZGF0YTsKICAgIH0gZWxzZSBpZiAoaGFzRmlsZShkYXRhKSB8fCBkYXRhVHlwZSA9PT0gJ2Zvcm0tZGF0YScpIHsKICAgICAgZmV0Y2hCb2R5ID0gb2JqZWN0MmZvcm1EYXRhKGRhdGEsIHFzT3B0aW9ucyk7CiAgICB9IGVsc2UgaWYgKGRhdGFUeXBlID09PSAnZm9ybScpIHsKICAgICAgZmV0Y2hCb2R5ID0gdHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnID8gZGF0YSA6IHFzc3RyaW5naWZ5KGRhdGEsIHFzT3B0aW9ucyk7CiAgICAgIGZldGNoSGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJzsKICAgIH0gZWxzZSBpZiAoZGF0YVR5cGUgPT09ICdqc29uJykgewogICAgICBmZXRjaEJvZHkgPSB0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycgPyBkYXRhIDogSlNPTi5zdHJpbmdpZnkoZGF0YSk7CiAgICAgIGZldGNoSGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbic7CiAgICB9CiAgfQoKICB2YXIgZmV0Y2hPcHRpb24gPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGZldGNoT3B0aW9ucyksIHsKICAgIHNpZ25hbCwKICAgIHVybCwKICAgIG1ldGhvZCwKICAgIGhlYWRlcnM6IGZldGNoSGVhZGVycywKICAgIGJvZHk6IGZldGNoQm9keQogIH0pOyAvLyDlhbzlrrkgd2l0aENyZWRlbnRpYWxzIOWPguaVsAoKICBpZiAod2l0aENyZWRlbnRpYWxzICYmICFmZXRjaE9wdGlvbi5jcmVkZW50aWFscykgewogICAgZmV0Y2hPcHRpb24uY3JlZGVudGlhbHMgPSAnaW5jbHVkZSc7CiAgfQoKICByZXR1cm4gZmV0Y2hPcHRpb247Cn0gLy8g56Gu5L+dIGRhdGEg5LiA5a6a5piv5a+56LGhCgoKZnVuY3Rpb24gd3JhcFJlc3BvbnNlKHJlc3BvbnNlLCB0cmFuc0pzb24pIHsKICBpZiAoIXJlc3BvbnNlKSB7CiAgICB2YXIgZmFrZVJlcyA9IHsKICAgICAgZGF0YToge30KICAgIH07CiAgICByZXR1cm4gZmFrZVJlczsKICB9CgogIGlmICh0eXBlb2YgcmVzcG9uc2UuZGF0YSA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgIHJlc3BvbnNlLmRhdGEgPSB7fTsKICB9IGVsc2UgaWYgKCFpc1BsYWluT2JqZWN0KHJlc3BvbnNlLmRhdGEpKSB7CiAgICBpZiAoIXRyYW5zSnNvbikgewogICAgICByZXNwb25zZS5kYXRhID0gewogICAgICAgIHZhbHVlOiByZXNwb25zZS5kYXRhCiAgICAgIH07CiAgICAgIHJldHVybiByZXNwb25zZTsKICAgIH0KCiAgICB0cnkgewogICAgICByZXNwb25zZS5kYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZS5kYXRhKTsKICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgfSBjYXRjaCAoXykgey8vCiAgICB9CiAgfQoKICByZXR1cm4gcmVzcG9uc2U7Cn0gLy8g6I635Y+W6K+35rGC5Y+C5pWwCgoKZnVuY3Rpb24gZ2V0UmVxT3B0aW9uKG9wdGlvbikgewogIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7CiAgICAvLyDlr7nosaHlj4LmlbAg5YWI5aGr5YWF6buY6K6k5YC8CiAgICB2YXIgb3B0ID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHsKICAgICAgZmV0Y2hPcHRpb25zOiB7fSwKICAgICAgaGVhZGVyczoge30sCiAgICAgIGNvbmZpZzoge30KICAgIH0sIG9wdGlvbiksIG5vcm1hbGl6ZVVybChvcHRpb24udXJsIHx8IG9wdGlvbi5hcGkgfHwgJycsIG9wdGlvbi5tZXRob2QpKTsKICAgIHZhciB7CiAgICAgIGFjdGlvbkFkZHIsCiAgICAgIGFwaSwKICAgICAgb25QcmVSZXF1ZXN0LAogICAgICBvblJlcXVlc3QKICAgIH0gPSBvcHQ7CiAgICBvcHQuYXBpID0gYXBpIHx8IG9wdGlvbi51cmw7CiAgICBvcHQuYWN0aW9uQWRkciA9IGFjdGlvbkFkZHIgfHwgb3B0LmFwaTsKCiAgICBpZiAoIW9wdC51cmwpIHsKICAgICAgbG9nLmVycm9yKCfor7fmsYLkuIDlrpropoHkvKAgdXJsIOWPguaVsCcsIG9wdGlvbik7CiAgICAgIHJlcXVlc3RFcnJvckN0cmwuY2FsbCh0aGlzLCBuZXcgRXJyb3IoJ+ivt+axguS4gOWumuimgeS8oCB1cmwg5Y+C5pWwJyksIHdyYXBSZXNwb25zZSgpKTsKICAgIH0KCiAgICBpZiAodGhpcy5vblByZVJlcXVlc3QpIHsKICAgICAgb3B0ID0gdGhpcy5vblByZVJlcXVlc3Qob3B0KTsKICAgIH0KCiAgICBpZiAob25QcmVSZXF1ZXN0KSB7CiAgICAgIG9wdCA9IHlpZWxkIG9uUHJlUmVxdWVzdChvcHQpOwogICAgfQoKICAgIHZhciByZXFPcHRpb24gPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdCksIGdldEZldGNoT3B0aW9uLmNhbGwodGhpcywgb3B0KSk7CgogICAgaWYgKHRoaXMub25SZXF1ZXN0KSB7CiAgICAgIHJlcU9wdGlvbiA9IHRoaXMub25SZXF1ZXN0KHJlcU9wdGlvbik7CiAgICB9CgogICAgaWYgKG9uUmVxdWVzdCkgewogICAgICByZXFPcHRpb24gPSBvblJlcXVlc3QocmVxT3B0aW9uKTsKICAgIH0KCiAgICByZXR1cm4gcmVxT3B0aW9uOwogIH0pOwp9IC8vIOWkhOeQhuagvOW8j+WMliBVUkwg5a2X56ym5LiyCgoKZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVVybCh1cmxTdHIsIGRlZk1ldGhvZCkgewogIHZhciBtZXRob2QgPSB0b1VwcGVyKGRlZk1ldGhvZCk7CiAgdmFyIHVybCA9IHVybFN0cjsKCiAgaWYgKC9eKEdFVHxQT1NUfFBVVHxERUxFVEV8UEFUQ0h8SEVBRHxPUFRJT05TKSAvaS50ZXN0KHVybCkpIHsKICAgIHZhciBbYXBpTWV0aG9kLCBhcGlTdHJdID0gdXJsU3RyLnNwbGl0KCcgJyk7CiAgICBtZXRob2QgPSBhcGlNZXRob2Q7CiAgICB1cmwgPSBhcGlTdHI7CiAgfQoKICByZXR1cm4gewogICAgdXJsLAogICAgbWV0aG9kOiB0b1VwcGVyKG1ldGhvZCkgfHwgJ0dFVCcKICB9Owp9IC8vIOiOt+WPliB1cmwg5Y+C5pWwCgpleHBvcnQgZnVuY3Rpb24gZ2V0VXJsQnlPcHRpb24ob3B0aW9uKSB7CiAgdmFyIHsKICAgIHFzT3B0aW9ucywKICAgIGRhdGEsCiAgICBkb21haW4gPSAnYXBpJywKICAgIGRvbWFpbnMsCiAgICB1cmw6IG9wdFVybCA9ICcnLAogICAgbWV0aG9kCiAgfSA9IG9wdGlvbjsKICB2YXIgdXJsT3B0aW9uID0gewogICAgdXJsOiBvcHRVcmwsCiAgICBtZXRob2QKICB9OwogIHZhciBhcGlEb21haW5zID0gZG9tYWlucyB8fCB0aGlzLmRvbWFpbnMgfHwge307CiAgdmFyIHVybCA9IG9wdFVybDsgLy8gdXJs5Lit5LiN5a2Y5ZyoICdodHRwJyDljLnphY0KCiAgaWYgKCEvXmh0dHBzPzpcL1wvLy50ZXN0KHVybCkpIHsKICAgIHZhciB1cmxQcmVmaXggPSBhcGlEb21haW5zW2RvbWFpbl07CgogICAgaWYgKCF1cmxQcmVmaXgpIHsKICAgICAgbG9nLmVycm9yKCdyZXF1ZXN0LmdldFVybEJ5T3B0aW9uIOino+aekOWHuumUmScsIG9wdGlvbik7CiAgICB9CgogICAgdXJsID0gIiIuY29uY2F0KHVybFByZWZpeCwgIi8iKS5jb25jYXQodXJsKTsKICB9IC8vIOWIoOmZpOWkmuS6jueahOaWnOadoAoKCiAgdXJsID0gcm1VcmxSZXBlYXRTbGFudCh1cmwpOwogIHZhciBpZHggPSB1cmwuaW5kZXhPZignPycpOwogIHZhciBoYXNoSWR4ID0gdXJsLmluZGV4T2YoJyMnKTsKICB2YXIgaGFzU3RyaW5nID0gaGFzaElkeCAhPT0gLTEgPyB1cmwuc3Vic3RyaW5nKGhhc2hJZHgpIDogJyc7CgogIGlmICgvXCQvLnRlc3QodXJsKSkgewogICAgdXJsID0gZmlsdGVyKHVybCwgZGF0YSk7CiAgfSAvLyDmt7vliqAgZ2V0IOivt+axguWPguaVsAoKCiAgaWYgKHVybE9wdGlvbi5tZXRob2QgPT09ICdHRVQnICYmIGRhdGEpIHsKICAgIGlmIChpZHggIT09IC0xKSB7CiAgICAgIHZhciB1cmxQYXJhbXMgPSBwYXJzZSh1cmwuc3Vic3RyaW5nKGlkeCArIDEsIGhhc2hJZHggIT09IC0xID8gaGFzaElkeCA6IHVuZGVmaW5lZCkpOwogICAgICB2YXIgcGFyYW1zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB1cmxQYXJhbXMpLCBkYXRhKTsKICAgICAgdXJsID0gIiIuY29uY2F0KHVybC5zdWJzdHJpbmcoMCwgaWR4KSwgIj8iKS5jb25jYXQocXNzdHJpbmdpZnkocGFyYW1zLCBxc09wdGlvbnMpKS5jb25jYXQoaGFzU3RyaW5nKTsKICAgIH0gZWxzZSB7CiAgICAgIHVybCArPSAiPyIuY29uY2F0KHFzc3RyaW5naWZ5KGRhdGEsIHFzT3B0aW9ucykpLmNvbmNhdChoYXNTdHJpbmcpOwogICAgfQogIH0KCiAgdXJsT3B0aW9uLnVybCA9IHVybDsKICByZXR1cm4gdXJsT3B0aW9uOwp9IC8vIOS9v+eUqCBjbGFzcyDog73lpJ/mm7TlrrnmmJPph43lhpkgcmVxdWVzdCDnmoTkuIDkupvlm57osIPlgLwKCmV4cG9ydCBjbGFzcyBSZXF1ZXN0IHsKICBjb25zdHJ1Y3Rvcihjb25maWcpIHsKICAgIC8vIOmFjee9rueahOWfn+WQjQogICAgdGhpcy5kb21haW5zID0ge307CiAgICB0aGlzLnNldENvbmZpZyhjb25maWcpOwogIH0gLy8g6K6+572u6YWN572uCgoKICBzZXRDb25maWcoY29uZmlnKSB7CiAgICB2YXIgewogICAgICBkb21haW5zID0ge30sCiAgICAgIGlzTW9jawogICAgfSA9IGNvbmZpZyB8fCB7fTsKICAgIHRoaXMuZG9tYWlucyA9IGRvbWFpbnM7CiAgICB0aGlzLmlzTW9jayA9IGlzTW9jazsKICB9IC8vIOino+aekOivt+axguWPguaVsAoKCiAgZ2V0VXJsQnlPcHRpb24ob3B0aW9uKSB7CiAgICByZXR1cm4gZ2V0VXJsQnlPcHRpb24uY2FsbCh0aGlzLCBvcHRpb24pOwogIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWR1cGUtY2xhc3MtbWVtYmVycwoKCiAgcmVxdWVzdChvcHRpb24pIHsKICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsgLy8g6I635Y+W6K+35rGC5Y+C5pWwCgogICAgICB2YXIgcmVxT3B0aW9uID0geWllbGQgZ2V0UmVxT3B0aW9uLmNhbGwodGhhdCwgb3B0aW9uKTsKICAgICAgdmFyIHsKICAgICAgICBvbkZha2VSZXF1ZXN0CiAgICAgIH0gPSBvcHRpb247IC8vIOWRveS4ree8k+WtmCDnm7TmjqXov5Tlm54KCiAgICAgIHZhciBjYWNoZWRSZXNwb25zZSA9IGNhY2hlU291cmNlQ3RybCgnZ2V0JywgcmVxT3B0aW9uKTsKCiAgICAgIGlmIChjYWNoZWRSZXNwb25zZSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBkYXRhOiBjYWNoZWRSZXNwb25zZQogICAgICAgIH07CiAgICAgIH0gLy8gbW9jayDmlbDmja7mi6bmiKoKCgogICAgICB2YXIgbW9ja1NvdXJjZSA9IHlpZWxkIG1vY2tTb3VyY2VDdHJsLmNhbGwodGhhdCwgcmVxT3B0aW9uKTsKCiAgICAgIGlmIChtb2NrU291cmNlICE9PSAnbm9uZScpIHsKICAgICAgICBjYWNoZVNvdXJjZUN0cmwoJ3NldCcsIHJlcU9wdGlvbiwgbW9ja1NvdXJjZS5kYXRhKTsKICAgICAgICByZXR1cm4gbW9ja1NvdXJjZTsKICAgICAgfSAvLyDlhbzlrrkgY2FjaGUg5Y+C5pWwLCDnlKjkuo7lpJror7fmsYLlubblj5Hmg4XlhrUKCgogICAgICBpZiAocmVxT3B0aW9uLm1ldGhvZCA9PT0gJ0dFVCcgJiYgcmVxT3B0aW9uLmNhY2hlICYmIHJlcU9wdGlvbi5jYWNoZSA+IDApIHsKICAgICAgICB2YXIgYXBpT2JqID0gcGljayhyZXFPcHRpb24sIFsndXJsJywgJ2NhY2hlJywgJ21ldGhvZCcsICdkYXRhJ10pOwogICAgICAgIHZhciBhcGlDYWNoZSA9IGdldEFwaUNhY2hlKGFwaU9iaik7CiAgICAgICAgbG9nLmRlYm91bmNlKCgpID0+IGxvZy5sb2cob25GYWtlUmVxdWVzdCA/ICdmYWtlQ2FjaGVTb3VyY2UnIDogJ2NhY2hlU291cmNlJywgcmVxT3B0aW9uLnVybCwgcmVxT3B0aW9uKSk7CgogICAgICAgIGlmIChhcGlDYWNoZSkgewogICAgICAgICAgcmV0dXJuIGFwaUNhY2hlLmNhY2hlZFByb21pc2U7CiAgICAgICAgfSAvLyDkvKroo4Ug6K+35rGCIOS5n+aUr+aMgee8k+WtmAoKCiAgICAgICAgdmFyIGNhY2hlZFByb21pc2UgPSBvbkZha2VSZXF1ZXN0ID8gZmFrZVNvdXJjZUN0cmwuY2FsbCh0aGF0LCByZXFPcHRpb24pIDogZmV0Y2hTb3VyY2VDdHJsLmNhbGwodGhhdCwgcmVxT3B0aW9uKTsKICAgICAgICBzZXRBcGlDYWNoZShhcGlPYmosIGNhY2hlZFByb21pc2UpOwogICAgICAgIHJldHVybiBjYWNoZWRQcm9taXNlOwogICAgICB9IC8vIOS8quijhSDor7fmsYIg55u05o6l6L+U5Zue5pWw5o2uCgoKICAgICAgaWYgKG9uRmFrZVJlcXVlc3QpIHsKICAgICAgICB2YXIgZmFrZVJlc3BvbnNlID0geWllbGQgZmFrZVNvdXJjZUN0cmwuY2FsbCh0aGF0LCByZXFPcHRpb24pOwogICAgICAgIGxvZy5sb2coJ1tmYWtlU291cmNlXScsIG9wdGlvbi51cmwsIGZha2VSZXNwb25zZS5kYXRhLCByZXFPcHRpb24pOwogICAgICAgIHJldHVybiBmYWtlUmVzcG9uc2U7CiAgICAgIH0KCiAgICAgIHZhciByZXNwb25zZSA9IHlpZWxkIGZldGNoU291cmNlQ3RybC5jYWxsKHRoYXQsIHJlcU9wdGlvbik7CiAgICAgIGNhY2hlU291cmNlQ3RybCgnc2V0JywgcmVxT3B0aW9uLCByZXNwb25zZS5kYXRhKTsKICAgICAgbG9nLmxvZygnW2FwaVNvdXJjZV0nLCByZXFPcHRpb24udXJsLCByZXNwb25zZS5kYXRhLCByZXFPcHRpb24pOwogICAgICByZXR1cm4gcmVzcG9uc2U7CiAgICB9KTsKICB9Cgp9"},{"version":3,"sources":["C:/Users/cwx/Desktop/editor-demo/node_modules/@ovine/core/lib/utils/request/index.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","getApiCache","setApiCache","object2formData","qsstringify","hasFile","isEmpty","filter","get","map","isPlainObject","isFunction","toUpper","pick","parse","fetch","logger","getSessionStore","setSessionStore","isExpired","promisedTimeout","rmUrlRepeatSlant","saveFile","log","getLogger","requestErrorCtrl","error","option","response","errorSource","withInsErrorHook","onError","onFinish","requestSuccessCtrl","onSuccess","res","wrapResponse","data","mockSourceCtrl","mockSource","api","method","url","mock","mockDelay","isMock","apiStr","mockSourceGen","fakeRes","call","cacheSourceCtrl","type","resource","expired","timestampKey","Date","now","toString","cached","whenExpired","readJsonResponse","text","responseText","JSON","saveFileFromRes","options","blob","disposition","fileName","exec","undefined","fetchSourceCtrl","body","config","responseType","onUploadProgress","XMLHttpRequest","uploadWithProgress","catch","status","Number","Error","headers","fakeSourceCtrl","fakeReq","onFakeRequest","fakeResponse","errorCtrl","bind","successCtrl","_a","xhr","open","toLowerCase","credentials","fetchOptions","withCredentials","header","key","setRequestHeader","onXhrError","statusText","onreadystatechange","readyState","responseURL","indexOf","responseHeaders","getAllResponseHeaders","onerror","ontimeout","upload","uploadProgress","onprogress","send","getFetchOption","dataType","qsOptions","getUrlByOption","cancelExecutor","signal","AbortController","controller","abort","fetchBody","fetchHeaders","test","FormData","Blob","ArrayBuffer","stringify","fetchOption","Object","assign","transJson","_","getReqOption","opt","normalizeUrl","actionAddr","onPreRequest","onRequest","reqOption","urlStr","defMethod","apiMethod","split","domain","domains","optUrl","urlOption","apiDomains","urlPrefix","idx","hashIdx","hasString","substring","urlParams","params","Request","constructor","setConfig","request","that","cachedResponse","cache","apiObj","apiCache","debounce","cachedPromise"],"mappings":"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","sourcesContent":["/**\n * 封装 fetch 请求\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable consistent-return */\nimport { getApiCache, setApiCache } from 'amis/lib/utils/api';\nimport { object2formData, qsstringify, hasFile, isEmpty } from 'amis/lib/utils/helper';\nimport { filter } from 'amis/lib/utils/tpl';\nimport { get, map, isPlainObject, isFunction, toUpper, pick } from 'lodash';\nimport { parse } from 'qs';\nimport { fetch } from 'whatwg-fetch';\nimport logger from \"../logger\";\nimport { getSessionStore, setSessionStore } from \"../store\";\nimport { isExpired, promisedTimeout, rmUrlRepeatSlant } from \"../tool\";\nimport { saveFile } from \"../file\";\nconst log = logger.getLogger('lib:utils:request');\n// 请求错误集中处理， 必须 throw 错误\nfunction requestErrorCtrl(error, option, response) {\n    // log.info('requestErrorCtrl', { error, option, response })\n    const errorSource = { option, response, error };\n    let withInsErrorHook = true;\n    // 如果返回 false，则不调用 全局的错误处理\n    if (option.onError) {\n        withInsErrorHook = option.onError(response, option, error);\n    }\n    if (withInsErrorHook !== false && this.onError) {\n        this.onError(response, option, error);\n    }\n    if (this.onFinish) {\n        this.onFinish(response, option, error);\n    }\n    throw errorSource;\n}\n// 请求成功集中处理\nfunction requestSuccessCtrl(response, option) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (this.onSuccess) {\n            const res = wrapResponse(response);\n            response.data = this.onSuccess(res.data, option, res);\n        }\n        if (option.onSuccess) {\n            const res = wrapResponse(response);\n            response.data = yield option.onSuccess(res.data, option, res);\n        }\n        if (this.onFinish) {\n            this.onFinish(wrapResponse(response), option);\n        }\n    });\n}\n// 模拟数据\nfunction mockSourceCtrl(option) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { mockSource, api, method, url, mock = true, mockDelay = 200 } = option;\n        if (!this.isMock || !mock || !mockSource) {\n            return 'none';\n        }\n        const apiStr = api || `${method} ${url || ''}`;\n        // mock数据生成方式\n        const mockSourceGen = get(mockSource, apiStr) ? mockSource[apiStr] : mockSource;\n        // mock 原始数据\n        const fakeRes = {};\n        fakeRes.data = isFunction(mockSourceGen) ? mockSourceGen(option) : mockSourceGen;\n        yield requestSuccessCtrl.call(this, fakeRes, option);\n        if (mockDelay) {\n            yield promisedTimeout(mockDelay);\n        }\n        log.log('mockSource', option.url, fakeRes.data, option);\n        return fakeRes;\n    });\n}\n// 缓存请求 只缓存 GET 请求\nfunction cacheSourceCtrl(type, option, resource) {\n    const { url = '', expired = 0, method = 'GET' } = option || {};\n    if (!expired || method !== 'GET') {\n        return;\n    }\n    const timestampKey = `${url}:timestamp`;\n    if (type === 'set') {\n        // 不存在 resource 直接返回\n        if (!resource) {\n            return;\n        }\n        // 所有数据按照 字符串缓存\n        setSessionStore(url, resource);\n        setSessionStore(timestampKey, (Date.now() + expired).toString());\n        return;\n    }\n    if (type === 'get') {\n        const cached = getSessionStore(url);\n        const whenExpired = getSessionStore(timestampKey);\n        if (cached && whenExpired) {\n            if (!isExpired(whenExpired)) {\n                log.log('expiredSource', option.url, cached, option);\n                return cached;\n            }\n        }\n    }\n}\n// 读取json结果,非JSON结果 在 request 模块处理\nfunction readJsonResponse(response) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const text = yield response.text();\n            response.responseText = text;\n            const data = JSON.parse(text);\n            delete response.responseText; // 如果解析成功 将responseText 参数删除\n            return data;\n        }\n        catch (e) {\n            return {};\n        }\n    });\n}\nfunction saveFileFromRes(options) {\n    const { blob, disposition } = options;\n    const fileName = get(/filename=(.*)$/.exec(disposition), '1') || undefined;\n    saveFile(blob, fileName);\n}\n// 发出 fetch 请求\nfunction fetchSourceCtrl(option) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { url, body, config, responseType } = option;\n        if (config.onUploadProgress && body && typeof XMLHttpRequest !== 'undefined') {\n            const result = yield uploadWithProgress.call(this, option);\n            return result;\n        }\n        const result = yield fetch(url, option)\n            .catch((error) => {\n            requestErrorCtrl.call(this, error, option, wrapResponse());\n        })\n            .then((response) => __awaiter(this, void 0, void 0, function* () {\n            // 当 fetch 发生错误时 不做任何处理\n            if (!response) {\n                return;\n            }\n            const status = Number(response.status);\n            if (status <= 100 || status >= 400) {\n                try {\n                    response.data = yield readJsonResponse(response);\n                }\n                catch (e) {\n                    //\n                }\n                requestErrorCtrl.call(this, new Error('status <= 100 || status >= 400'), option, wrapResponse(response));\n                return;\n            }\n            try {\n                if (responseType === 'blob' || config.responseType === 'blob') {\n                    const blob = yield response.blob();\n                    response.data = { blob };\n                    saveFileFromRes({ blob, disposition: response.headers.get('Content-Disposition') || '' });\n                }\n                else {\n                    response.data = yield readJsonResponse(response);\n                }\n                yield requestSuccessCtrl.call(this, response, option);\n                return response;\n            }\n            catch (error) {\n                requestErrorCtrl.call(this, error, option, wrapResponse(response));\n            }\n        }));\n        return result;\n    });\n}\nfunction fakeSourceCtrl(option) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const fakeReq = option.onFakeRequest;\n        const fakeRes = yield fakeReq(option);\n        const fakeResponse = wrapResponse(fakeRes);\n        return {\n            data: fakeResponse,\n        };\n    });\n}\n// fetch 添加 onUploadProgress 支持\nfunction uploadWithProgress(option) {\n    const errorCtrl = requestErrorCtrl.bind(this);\n    const successCtrl = requestSuccessCtrl.bind(this);\n    return new Promise((resolve) => {\n        var _a;\n        const { config, method = '', url = '', headers = {}, body } = option;\n        let xhr = new XMLHttpRequest();\n        xhr.open(method.toLowerCase(), url, true);\n        // 兼容 withCredentials 与 credentials 参数\n        const credentials = (_a = option.fetchOptions) === null || _a === void 0 ? void 0 : _a.credentials;\n        if (config.withCredentials || (credentials && credentials !== 'omit')) {\n            xhr.withCredentials = true;\n        }\n        map(headers, (header, key) => {\n            if (xhr) {\n                xhr.setRequestHeader(key, header);\n            }\n        });\n        function onXhrError(status, text) {\n            errorCtrl(new Error(text), option, wrapResponse({\n                status,\n                data: (xhr === null || xhr === void 0 ? void 0 : xhr.response) || (xhr === null || xhr === void 0 ? void 0 : xhr.responseText),\n                statusText: xhr === null || xhr === void 0 ? void 0 : xhr.statusText,\n            }, true));\n            xhr = null;\n        }\n        xhr.onreadystatechange = function () {\n            if (!xhr || xhr.readyState !== 4) {\n                return;\n            }\n            if (xhr.status === 0 && !(xhr.responseURL && xhr.responseURL.indexOf('file:') === 0)) {\n                return;\n            }\n            const responseHeaders = (xhr === null || xhr === void 0 ? void 0 : xhr.getAllResponseHeaders()) || {};\n            const response = {\n                data: xhr.response || xhr.responseText,\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: responseHeaders,\n            };\n            if (this.status <= 100 || this.status >= 400) {\n                errorCtrl(new Error('status <= 100 || status >= 400'), option, wrapResponse(response, true));\n            }\n            else {\n                successCtrl(wrapResponse(response, true), option).then(() => {\n                    resolve(response);\n                });\n            }\n        };\n        xhr.onerror = function () {\n            onXhrError(this.status, 'Network Error');\n        };\n        xhr.ontimeout = function () {\n            onXhrError(this.status, 'TimeOut Error');\n        };\n        if (xhr.upload && config.uploadProgress) {\n            xhr.upload.onprogress = config.uploadProgress;\n        }\n        xhr.send(body);\n    });\n}\n// 获取 fetch 参数\nfunction getFetchOption(option) {\n    const { headers, data, body, fetchOptions, dataType = 'json', qsOptions } = option;\n    const { url, method } = getUrlByOption.call(this, option);\n    // 自行实现取消请求的回调\n    const { cancelExecutor, withCredentials } = option.config || {};\n    let signal = null;\n    if (cancelExecutor && typeof AbortController !== 'undefined') {\n        const controller = new AbortController();\n        signal = controller.signal;\n        cancelExecutor(() => {\n            controller.abort();\n        });\n    }\n    /**\n     * amis dataType 逻辑\n     */\n    // fetch 请求参数封装\n    let fetchBody = body;\n    const fetchHeaders = headers;\n    if (isEmpty(fetchBody) && data && !/GET|HEAD|OPTIONS/.test(method)) {\n        if (data instanceof FormData || data instanceof Blob || data instanceof ArrayBuffer) {\n            fetchBody = data;\n        }\n        else if (hasFile(data) || dataType === 'form-data') {\n            fetchBody = object2formData(data, qsOptions);\n        }\n        else if (dataType === 'form') {\n            fetchBody = typeof data === 'string' ? data : qsstringify(data, qsOptions);\n            fetchHeaders['Content-Type'] = 'application/x-www-form-urlencoded';\n        }\n        else if (dataType === 'json') {\n            fetchBody = typeof data === 'string' ? data : JSON.stringify(data);\n            fetchHeaders['Content-Type'] = 'application/json';\n        }\n    }\n    const fetchOption = Object.assign(Object.assign({}, fetchOptions), { signal,\n        url,\n        method, headers: fetchHeaders, body: fetchBody });\n    // 兼容 withCredentials 参数\n    if (withCredentials && !fetchOption.credentials) {\n        fetchOption.credentials = 'include';\n    }\n    return fetchOption;\n}\n// 确保 data 一定是对象\nfunction wrapResponse(response, transJson) {\n    if (!response) {\n        const fakeRes = { data: {} };\n        return fakeRes;\n    }\n    if (typeof response.data === 'undefined') {\n        response.data = {};\n    }\n    else if (!isPlainObject(response.data)) {\n        if (!transJson) {\n            response.data = { value: response.data };\n            return response;\n        }\n        try {\n            response.data = JSON.parse(response.data);\n            return response;\n        }\n        catch (_) {\n            //\n        }\n    }\n    return response;\n}\n// 获取请求参数\nfunction getReqOption(option) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // 对象参数 先填充默认值\n        let opt = Object.assign(Object.assign({ fetchOptions: {}, headers: {}, config: {} }, option), normalizeUrl(option.url || option.api || '', option.method));\n        const { actionAddr, api, onPreRequest, onRequest } = opt;\n        opt.api = api || option.url;\n        opt.actionAddr = actionAddr || opt.api;\n        if (!opt.url) {\n            log.error('请求一定要传 url 参数', option);\n            requestErrorCtrl.call(this, new Error('请求一定要传 url 参数'), wrapResponse());\n        }\n        if (this.onPreRequest) {\n            opt = this.onPreRequest(opt);\n        }\n        if (onPreRequest) {\n            opt = yield onPreRequest(opt);\n        }\n        let reqOption = Object.assign(Object.assign({}, opt), getFetchOption.call(this, opt));\n        if (this.onRequest) {\n            reqOption = this.onRequest(reqOption);\n        }\n        if (onRequest) {\n            reqOption = onRequest(reqOption);\n        }\n        return reqOption;\n    });\n}\n// 处理格式化 URL 字符串\nexport function normalizeUrl(urlStr, defMethod) {\n    let method = toUpper(defMethod);\n    let url = urlStr;\n    if (/^(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS) /i.test(url)) {\n        const [apiMethod, apiStr] = urlStr.split(' ');\n        method = apiMethod;\n        url = apiStr;\n    }\n    return {\n        url,\n        method: (toUpper(method) || 'GET'),\n    };\n}\n// 获取 url 参数\nexport function getUrlByOption(option) {\n    const { qsOptions, data, domain = 'api', domains, url: optUrl = '', method } = option;\n    const urlOption = { url: optUrl, method };\n    const apiDomains = domains || this.domains || {};\n    let url = optUrl;\n    // url中不存在 'http' 匹配\n    if (!/^https?:\\/\\//.test(url)) {\n        const urlPrefix = apiDomains[domain];\n        if (!urlPrefix) {\n            log.error('request.getUrlByOption 解析出错', option);\n        }\n        url = `${urlPrefix}/${url}`;\n    }\n    // 删除多于的斜杠\n    url = rmUrlRepeatSlant(url);\n    const idx = url.indexOf('?');\n    const hashIdx = url.indexOf('#');\n    const hasString = hashIdx !== -1 ? url.substring(hashIdx) : '';\n    if (/\\$/.test(url)) {\n        url = filter(url, data);\n    }\n    // 添加 get 请求参数\n    if (urlOption.method === 'GET' && data) {\n        if (idx !== -1) {\n            const urlParams = parse(url.substring(idx + 1, hashIdx !== -1 ? hashIdx : undefined));\n            const params = Object.assign(Object.assign({}, urlParams), data);\n            url = `${url.substring(0, idx)}?${qsstringify(params, qsOptions)}${hasString}`;\n        }\n        else {\n            url += `?${qsstringify(data, qsOptions)}${hasString}`;\n        }\n    }\n    urlOption.url = url;\n    return urlOption;\n}\n// 使用 class 能够更容易重写 request 的一些回调值\nexport class Request {\n    constructor(config) {\n        // 配置的域名\n        this.domains = {};\n        this.setConfig(config);\n    }\n    // 设置配置\n    setConfig(config) {\n        const { domains = {}, isMock } = config || {};\n        this.domains = domains;\n        this.isMock = isMock;\n    }\n    // 解析请求参数\n    getUrlByOption(option) {\n        return getUrlByOption.call(this, option);\n    }\n    // eslint-disable-next-line no-dupe-class-members\n    request(option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const that = this;\n            // 获取请求参数\n            const reqOption = yield getReqOption.call(that, option);\n            const { onFakeRequest } = option;\n            // 命中缓存 直接返回\n            const cachedResponse = cacheSourceCtrl('get', reqOption);\n            if (cachedResponse) {\n                return {\n                    data: cachedResponse,\n                };\n            }\n            // mock 数据拦截\n            const mockSource = yield mockSourceCtrl.call(that, reqOption);\n            if (mockSource !== 'none') {\n                cacheSourceCtrl('set', reqOption, mockSource.data);\n                return mockSource;\n            }\n            // 兼容 cache 参数, 用于多请求并发情况\n            if (reqOption.method === 'GET' && reqOption.cache && reqOption.cache > 0) {\n                const apiObj = pick(reqOption, ['url', 'cache', 'method', 'data']);\n                const apiCache = getApiCache(apiObj);\n                log.debounce(() => log.log(onFakeRequest ? 'fakeCacheSource' : 'cacheSource', reqOption.url, reqOption));\n                if (apiCache) {\n                    return apiCache.cachedPromise;\n                }\n                // 伪装 请求 也支持缓存\n                const cachedPromise = onFakeRequest\n                    ? fakeSourceCtrl.call(that, reqOption)\n                    : fetchSourceCtrl.call(that, reqOption);\n                setApiCache(apiObj, cachedPromise);\n                return cachedPromise;\n            }\n            // 伪装 请求 直接返回数据\n            if (onFakeRequest) {\n                const fakeResponse = yield fakeSourceCtrl.call(that, reqOption);\n                log.log('[fakeSource]', option.url, fakeResponse.data, reqOption);\n                return fakeResponse;\n            }\n            const response = yield fetchSourceCtrl.call(that, reqOption);\n            cacheSourceCtrl('set', reqOption, response.data);\n            log.log('[apiSource]', reqOption.url, response.data, reqOption);\n            return response;\n        });\n    }\n}\n"]}]}