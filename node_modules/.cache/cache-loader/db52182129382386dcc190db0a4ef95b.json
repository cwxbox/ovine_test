{"remainingRequest":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\babel-loader\\lib\\index.js??ref--5-1!C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\@ovine\\core\\lib\\components\\amis\\schema\\func.js","dependencies":[{"path":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\@ovine\\core\\lib\\components\\amis\\schema\\func.js","mtime":1618319234665},{"path":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616400859944},{"path":"C:\\Users\\cwx\\Desktop\\editor-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1617798315061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9fcmVzdCA9IHRoaXMgJiYgdGhpcy5fX3Jlc3QgfHwgZnVuY3Rpb24gKHMsIGUpIHsKICB2YXIgdCA9IHt9OwoKICBmb3IgKHZhciBwIGluIHMpIHsKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMCkgdFtwXSA9IHNbcF07CiAgfQoKICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSAiZnVuY3Rpb24iKSBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7CiAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpIHRbcFtpXV0gPSBzW3BbaV1dOwogIH0KICByZXR1cm4gdDsKfTsKCmltcG9ydCB7IHJlc29sdmVSZW5kZXJlciB9IGZyb20gJ2FtaXMnOwppbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdhbWlzL2xpYi91dGlscy90cGwnOwppbXBvcnQgeyBnZXQsIGlzQXJyYXksIGlzRW1wdHksIGlzT2JqZWN0LCBtYXAsIGlzRnVuY3Rpb24gfSBmcm9tICdsb2Rhc2gnOwppbXBvcnQgeyBjaGVja0xpbWl0QnlLZXlzIH0gZnJvbSAiLi4vLi4vLi4vcm91dGVzL2xpbWl0L2V4cG9ydHMiOwppbXBvcnQgbG9nZ2VyIGZyb20gIi4uLy4uLy4uL3V0aWxzL2xvZ2dlciI7CnZhciBsb2cgPSBsb2dnZXIuZ2V0TG9nZ2VyKCdkZXY6YW1pc1NjaGVtYTp1dGlscycpOyAvLyDmoKHpqowgc2NoZW1hIOadg+mZkAoKdmFyIGNoZWNrU2NoZW1hTGltaXQgPSAoc2NoZW1hLCBub2RlUGF0aCkgPT4gewogIHZhciB7CiAgICBsaW1pdHMsCiAgICBsaW1pdHNMb2dpYyA9ICdhbmQnCiAgfSA9IHNjaGVtYSB8fCB7fTsKCiAgaWYgKCFsaW1pdHMpIHsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgaWYgKGxpbWl0c0xvZ2ljID09PSAnb3InICYmIHR5cGVvZiBsaW1pdHMgIT09ICdzdHJpbmcnKSB7CiAgICByZXR1cm4gISFsaW1pdHMuc29tZShsaW1pdCA9PiBjaGVja0xpbWl0QnlLZXlzKGxpbWl0LCB7CiAgICAgIG5vZGVQYXRoCiAgICB9KSk7CiAgfQoKICB2YXIgaXNBdXRoID0gY2hlY2tMaW1pdEJ5S2V5cyhsaW1pdHMsIHsKICAgIG5vZGVQYXRoCiAgfSk7CiAgcmV0dXJuIGlzQXV0aDsKfTsgLy8g6L+H5ruk5peg5p2D6ZmQ5pON5L2cCgoKZXhwb3J0IHZhciBmaWx0ZXJTY2hlbWFMaW1pdCA9IChzY2hlbWEsIG9wdGlvbikgPT4gewogIHZhciB7CiAgICBub2RlUGF0aCwKICAgIGlzRGVmaW5pdGlvbnMKICB9ID0gb3B0aW9uIHx8IHt9OwoKICBpZiAoIWlzT2JqZWN0KHNjaGVtYSkpIHsKICAgIHJldHVybjsKICB9CgogIGlmIChpc0FycmF5KHNjaGVtYSkpIHsKICAgIHZhciBsaW1pdGVkSWR4QXIgPSBbXTsKICAgIHNjaGVtYS5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewogICAgICBpZiAoIWNoZWNrU2NoZW1hTGltaXQoaXRlbSwgbm9kZVBhdGgpKSB7CiAgICAgICAgbGltaXRlZElkeEFyLnB1c2goaW5kZXgpOwogICAgICB9IGVsc2UgewogICAgICAgIGZpbHRlclNjaGVtYUxpbWl0KGl0ZW0sIHsKICAgICAgICAgIG5vZGVQYXRoCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0pOwogICAgbGltaXRlZElkeEFyLmZvckVhY2goKGlkeCwgaW5kZXgpID0+IHsKICAgICAgc2NoZW1hLnNwbGljZShpZHggLSBpbmRleCwgMSk7CiAgICB9KTsKICAgIHJldHVybjsKICB9CgogIGlmICghY2hlY2tTY2hlbWFMaW1pdChzY2hlbWEsIG5vZGVQYXRoKSkgewogICAgOwogICAgc2NoZW1hLnR5cGUgPSAnbGliLW9taXQnOwogICAgcmV0dXJuOwogIH0KCiAgbWFwKHNjaGVtYSwgKHZhbCwga2V5KSA9PiB7CiAgICBpZiAoIWlzT2JqZWN0KHNjaGVtYSkpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmICghY2hlY2tTY2hlbWFMaW1pdCh2YWwsIG5vZGVQYXRoKSkgewogICAgICBpZiAoaXNEZWZpbml0aW9ucykgewogICAgICAgIHNjaGVtYVtrZXldID0gewogICAgICAgICAgdHlwZTogJ2xpYi1vbWl0JwogICAgICAgIH07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZGVsZXRlIHNjaGVtYVtrZXldOwogICAgICB9CgogICAgICByZXR1cm47CiAgICB9CgogICAgZmlsdGVyU2NoZW1hTGltaXQodmFsLCB7CiAgICAgIG5vZGVQYXRoLAogICAgICBpc0RlZmluaXRpb25zOiBrZXkgPT09ICdkZWZpbml0aW9ucycKICAgIH0pOwogIH0pOwp9OyAvLyDoh6rlrprkuYnmoLzlvI8g6L2s5o2i5Li6IGFtaXMg5qC85byPCgpleHBvcnQgdmFyIGNvbnZlcnRUb0FtaXNTY2hlbWEgPSAoc2NoZW1hLCBvcHRpb24pID0+IHsKICB2YXIgewogICAgZGVmaW5pdGlvbnMsCiAgICBwcmVzZXQsCiAgICBjb25zdGFudHMKICB9ID0gb3B0aW9uOwoKICBpZiAoIXByZXNldCAmJiAhZGVmaW5pdGlvbnMgJiYgIWNvbnN0YW50cykgewogICAgcmV0dXJuIHNjaGVtYTsKICB9CgogIHZhciB7CiAgICBub2RlUGF0aAogIH0gPSBwcmVzZXQgfHwge307CiAgbWFwKHNjaGVtYSwgKHZhbHVlLCBrZXkpID0+IHsKICAgIC8vIHRyYW5zIGNvbnN0YW50cyBrZXkKICAgIGlmIChjb25zdGFudHMpIHsKICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgL1wkXHtbQS1aXVtBLVowLTlfXSpcfS8udGVzdCh2YWx1ZSkpIHsKICAgICAgICB2YXIgbmV3VmFsID0gZmlsdGVyKHZhbHVlLCBjb25zdGFudHMpOwogICAgICAgIHNjaGVtYVtrZXldID0gbmV3VmFsOwogICAgICB9CgogICAgICBpZiAodHlwZW9mIGtleSA9PT0gJ3N0cmluZycgJiYgL1wkXHtbQS1aXVtBLVowLTlfXSpcfS8udGVzdChrZXkpKSB7CiAgICAgICAgdmFyIG5ld0tleSA9IGZpbHRlcihrZXksIGNvbnN0YW50cyk7CiAgICAgICAgc2NoZW1hW25ld0tleV0gPSB2YWx1ZTsKICAgICAgICBkZWxldGUgc2NoZW1hW2tleV07CiAgICAgIH0KICAgIH0gLy8gT21pdCAiIGFwaXMiIGFuZCAibGltaXRzIgoKCiAgICBpZiAoa2V5ID09PSAnYXBpcycgfHwga2V5ID09PSAnbGltaXRzJykgewogICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGlzT2JqZWN0KHZhbHVlKSkgewogICAgICBzY2hlbWFba2V5XSA9IGNvbnZlcnRUb0FtaXNTY2hlbWEodmFsdWUsIG9wdGlvbik7CiAgICAgIHJldHVybjsKICAgIH0gLy8gcmVzb2x2ZSBkZWZpbml0aW9ucyBmdW5jdGlvbnMga2V5cwoKCiAgICBpZiAoa2V5ID09PSAnJHJlZicgJiYgaXNGdW5jdGlvbihnZXQoZGVmaW5pdGlvbnMsIHZhbHVlKSkpIHsKICAgICAgZGVsZXRlIHNjaGVtYS4kcmVmOwogICAgICBzY2hlbWEgPSBnZXQoZGVmaW5pdGlvbnMsIHZhbHVlKShzY2hlbWEpIHx8IHsKICAgICAgICB0eXBlOiAnbGliLW9taXQnCiAgICAgIH07CiAgICAgIHJldHVybjsKICAgIH0gLy8gcmVzb2x2ZSBwcmVzZXQga2V5cwoKCiAgICB2YXIgcHJlc2V0UmVmVHlwZSA9IGtleSA9PT0gJyRwcmVzZXQnID8gJ2tleScgOiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHZhbHVlLmluZGV4T2YoJyRwcmVzZXQuJykgPT09IDAgPyAndmFsdWUnIDogJyc7CgogICAgaWYgKCFwcmVzZXRSZWZUeXBlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB2YXIgaXNLZXlSZWYgPSBwcmVzZXRSZWZUeXBlID09PSAna2V5JzsKICAgIHZhciBwcmVzZXRWYWwgPSBnZXQocHJlc2V0LCBpc0tleVJlZiA/IHZhbHVlIDogdmFsdWUucmVwbGFjZSgnJHByZXNldC4nLCAnJykpOwogICAgdmFyIGxvZ1N0ciA9ICIgWyIuY29uY2F0KGtleSwgIjogIikuY29uY2F0KHZhbHVlLCAiXSBcdThCRjdcdTY4QzBcdTY3RTUgIikuY29uY2F0KG5vZGVQYXRoLCAiL3ByZXNldCBcdTYyMTZcdTgwMDUgc2NoZW1hLnByZXNldCIpOwoKICAgIGlmICghcHJlc2V0VmFsKSB7CiAgICAgIGxvZy53YXJuKCckcHJlc2V0IOS4jeWtmOWcqOOAgicsIGxvZ1N0cik7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoIWlzS2V5UmVmKSB7CiAgICAgIHNjaGVtYVtrZXldID0gcHJlc2V0VmFsOwogICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKCFpc09iamVjdChwcmVzZXRWYWwpKSB7CiAgICAgIGxvZy53YXJuKCckcHJlc2V05Li6a2V55pe277yM5Y+q6IO95byV55Sob2JqZWN05YC844CCJywgbG9nU3RyKTsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGRlbGV0ZSBzY2hlbWEuJHByZXNldDsKICAgIHNjaGVtYSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcHJlc2V0VmFsKSwgc2NoZW1hKTsKICB9KTsKICByZXR1cm4gc2NoZW1hOwp9OyAvLyDlpITnkIboh6rlrprkuYnmoLzlvI8KCmV4cG9ydCB2YXIgcmVzb2x2ZUxpYlNjaGVtYSA9IHNjaGVtYSA9PiB7CiAgdmFyIHsKICAgIHByZXNldCA9IHt9LAogICAgZGVmaW5pdGlvbnMsCiAgICBjb25zdGFudHMKICB9ID0gc2NoZW1hLAogICAgICByZXN0ID0gX19yZXN0KHNjaGVtYSwgWyJwcmVzZXQiLCAiZGVmaW5pdGlvbnMiLCAiY29uc3RhbnRzIl0pOwoKICB2YXIgcmVmb3JtU2NoZW1hID0gT2JqZWN0LmFzc2lnbih7CiAgICBkZWZpbml0aW9ucywKICAgIHByZXNldAogIH0sIHJlc3QpOwoKICBpZiAoaXNFbXB0eShwcmVzZXQpICYmIGlzRW1wdHkoZGVmaW5pdGlvbnMpICYmICFjb25zdGFudHMpIHsKICAgIHJldHVybiByZWZvcm1TY2hlbWE7CiAgfQoKICBjb252ZXJ0VG9BbWlzU2NoZW1hKHJlZm9ybVNjaGVtYSwgewogICAgZGVmaW5pdGlvbnMsCiAgICBwcmVzZXQsCiAgICBjb25zdGFudHMKICB9KTsKICBmaWx0ZXJTY2hlbWFMaW1pdChyZXN0LCBwcmVzZXQpOwogIHJldHVybiByZWZvcm1TY2hlbWE7Cn07IC8vIOiHquWumuS5ieino+aekOWZqAoKZXhwb3J0IHZhciBsaWJSZXNvbHZlciA9IChwYXRoLCBzY2hlbWEpID0+IHsKICByZXR1cm4gcmVzb2x2ZVJlbmRlcmVyKHBhdGgsIHNjaGVtYSk7Cn07IC8vIOmhtuWxguaciSB0eXBlIOS4jiBjc3Mg5bGe5oCn77yMIOiHquWKqOazqOWFpSBsaWItY3NzCgpleHBvcnQgdmFyIHdyYXBDc3MgPSBzY2hlbWEgPT4gewogIHZhciB7CiAgICBjc3M6IGdldENzcywKICAgIHRhZywKICAgIGh0bWxDbGFzc05hbWUsCiAgICBkZWZpbml0aW9ucywKICAgIGNvbnN0YW50cywKICAgIHByZXNldAogIH0gPSBzY2hlbWEsCiAgICAgIHJlc3QgPSBfX3Jlc3Qoc2NoZW1hLCBbImNzcyIsICJ0YWciLCAiaHRtbENsYXNzTmFtZSIsICJkZWZpbml0aW9ucyIsICJjb25zdGFudHMiLCAicHJlc2V0Il0pOwoKICBpZiAoIWdldENzcyAmJiAhdGFnICYmICFodG1sQ2xhc3NOYW1lKSB7CiAgICByZXR1cm4gc2NoZW1hOwogIH0KCiAgcmV0dXJuIHsKICAgIHRhZywKICAgIHByZXNldCwKICAgIGRlZmluaXRpb25zLAogICAgY29uc3RhbnRzLAogICAgaHRtbENsYXNzTmFtZSwKICAgIGJvZHk6IHJlc3QsCiAgICBjc3M6IGdldENzcywKICAgIHR5cGU6ICdsaWItY3NzJwogIH07Cn07"},{"version":3,"sources":["C:/Users/cwx/Desktop/editor-demo/node_modules/@ovine/core/lib/components/amis/schema/func.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","resolveRenderer","filter","get","isArray","isEmpty","isObject","map","isFunction","checkLimitByKeys","logger","log","getLogger","checkSchemaLimit","schema","nodePath","limits","limitsLogic","some","limit","isAuth","filterSchemaLimit","option","isDefinitions","limitedIdxAr","forEach","item","index","push","idx","splice","type","val","key","convertToAmisSchema","definitions","preset","constants","value","test","newVal","newKey","$ref","presetRefType","isKeyRef","presetVal","replace","logStr","warn","$preset","assign","resolveLibSchema","rest","reformSchema","libResolver","path","wrapCss","css","getCss","tag","htmlClassName","body"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { resolveRenderer } from 'amis';\nimport { filter } from 'amis/lib/utils/tpl';\nimport { get, isArray, isEmpty, isObject, map, isFunction } from 'lodash';\nimport { checkLimitByKeys } from \"../../../routes/limit/exports\";\nimport logger from \"../../../utils/logger\";\nconst log = logger.getLogger('dev:amisSchema:utils');\n// 校验 schema 权限\nconst checkSchemaLimit = (schema, nodePath) => {\n    const { limits, limitsLogic = 'and' } = schema || {};\n    if (!limits) {\n        return true;\n    }\n    if (limitsLogic === 'or' && typeof limits !== 'string') {\n        return !!limits.some((limit) => checkLimitByKeys(limit, { nodePath }));\n    }\n    const isAuth = checkLimitByKeys(limits, { nodePath });\n    return isAuth;\n};\n// 过滤无权限操作\nexport const filterSchemaLimit = (schema, option) => {\n    const { nodePath, isDefinitions } = option || {};\n    if (!isObject(schema)) {\n        return;\n    }\n    if (isArray(schema)) {\n        const limitedIdxAr = [];\n        schema.forEach((item, index) => {\n            if (!checkSchemaLimit(item, nodePath)) {\n                limitedIdxAr.push(index);\n            }\n            else {\n                filterSchemaLimit(item, { nodePath });\n            }\n        });\n        limitedIdxAr.forEach((idx, index) => {\n            schema.splice(idx - index, 1);\n        });\n        return;\n    }\n    if (!checkSchemaLimit(schema, nodePath)) {\n        ;\n        schema.type = 'lib-omit';\n        return;\n    }\n    map(schema, (val, key) => {\n        if (!isObject(schema)) {\n            return;\n        }\n        if (!checkSchemaLimit(val, nodePath)) {\n            if (isDefinitions) {\n                schema[key] = {\n                    type: 'lib-omit',\n                };\n            }\n            else {\n                delete schema[key];\n            }\n            return;\n        }\n        filterSchemaLimit(val, { nodePath, isDefinitions: key === 'definitions' });\n    });\n};\n// 自定义格式 转换为 amis 格式\nexport const convertToAmisSchema = (schema, option) => {\n    const { definitions, preset, constants } = option;\n    if (!preset && !definitions && !constants) {\n        return schema;\n    }\n    const { nodePath } = preset || {};\n    map(schema, (value, key) => {\n        // trans constants key\n        if (constants) {\n            if (typeof value === 'string' && /\\$\\{[A-Z][A-Z0-9_]*\\}/.test(value)) {\n                const newVal = filter(value, constants);\n                schema[key] = newVal;\n            }\n            if (typeof key === 'string' && /\\$\\{[A-Z][A-Z0-9_]*\\}/.test(key)) {\n                const newKey = filter(key, constants);\n                schema[newKey] = value;\n                delete schema[key];\n            }\n        }\n        // Omit \" apis\" and \"limits\"\n        if (key === 'apis' || key === 'limits') {\n            return;\n        }\n        if (isObject(value)) {\n            schema[key] = convertToAmisSchema(value, option);\n            return;\n        }\n        // resolve definitions functions keys\n        if (key === '$ref' && isFunction(get(definitions, value))) {\n            delete schema.$ref;\n            schema = get(definitions, value)(schema) || { type: 'lib-omit' };\n            return;\n        }\n        // resolve preset keys\n        const presetRefType = key === '$preset'\n            ? 'key'\n            : typeof value === 'string' && value.indexOf('$preset.') === 0\n                ? 'value'\n                : '';\n        if (!presetRefType) {\n            return;\n        }\n        const isKeyRef = presetRefType === 'key';\n        const presetVal = get(preset, isKeyRef ? value : value.replace('$preset.', ''));\n        const logStr = ` [${key}: ${value}] 请检查 ${nodePath}/preset 或者 schema.preset`;\n        if (!presetVal) {\n            log.warn('$preset 不存在。', logStr);\n            return;\n        }\n        if (!isKeyRef) {\n            schema[key] = presetVal;\n            return;\n        }\n        if (!isObject(presetVal)) {\n            log.warn('$preset为key时，只能引用object值。', logStr);\n            return;\n        }\n        delete schema.$preset;\n        schema = Object.assign(Object.assign({}, presetVal), schema);\n    });\n    return schema;\n};\n// 处理自定义格式\nexport const resolveLibSchema = (schema) => {\n    const { preset = {}, definitions, constants } = schema, rest = __rest(schema, [\"preset\", \"definitions\", \"constants\"]);\n    const reformSchema = Object.assign({ definitions, preset }, rest);\n    if (isEmpty(preset) && isEmpty(definitions) && !constants) {\n        return reformSchema;\n    }\n    convertToAmisSchema(reformSchema, { definitions, preset, constants });\n    filterSchemaLimit(rest, preset);\n    return reformSchema;\n};\n// 自定义解析器\nexport const libResolver = (path, schema) => {\n    return resolveRenderer(path, schema);\n};\n// 顶层有 type 与 css 属性， 自动注入 lib-css\nexport const wrapCss = (schema) => {\n    const { css: getCss, tag, htmlClassName, definitions, constants, preset } = schema, rest = __rest(schema, [\"css\", \"tag\", \"htmlClassName\", \"definitions\", \"constants\", \"preset\"]);\n    if (!getCss && !tag && !htmlClassName) {\n        return schema;\n    }\n    return {\n        tag,\n        preset,\n        definitions,\n        constants,\n        htmlClassName,\n        body: rest,\n        css: getCss,\n        type: 'lib-css',\n    };\n};\n"]}]}