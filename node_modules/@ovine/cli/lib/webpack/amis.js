"use strict";
/**
 * fix amis lib code by "string-replace-loader" of webpack
 */
exports.__esModule = true;
exports.fixFontAwesomeCss = exports.fixBootStropCss = exports.fixFroalaLoader = exports.fixFactoryLoader = exports.fixApiUtilLoader = exports.fixChartLoader = exports.fixEditorLoader = exports.fontAwesomeCss = exports.bootStropCss = exports.apiUtilReg = exports.factoryFileReg = exports.froalaEditorReg = exports.chartFileReg = exports.editorFileReg = void 0;
var constants_1 = require("../constants");
var utils_1 = require("../utils");
var fs = require('fs');
exports.editorFileReg = /[\\/]amis[\\/]lib[\\/]components[\\/]Editor\.js/;
exports.chartFileReg = /[\\/]amis[\\/]lib[\\/]renderers[\\/]Chart\.js/;
exports.froalaEditorReg = /[\\/]amis[\\/]lib[\\/]components[\\/]RichText\.js/;
exports.factoryFileReg = /[\\/]amis[\\/]lib[\\/]factory\.js/;
exports.apiUtilReg = /[\\/]amis[\\/]lib[\\/]utils[\\/]api\.js/;
exports.bootStropCss = /[\\/]bootstrap[\\/]dist[\\/]css[\\/]bootstrap.css/;
exports.fontAwesomeCss = /[\\/]font-awesome[\\/]css[\\/]font-awesome.css/;
function base64Encode(file) {
    var bitmap = fs.readFileSync(file);
    return Buffer.from(bitmap, 'utf-8').toString('base64');
}
var fixEditorLoader = function () { return ({
    loader: 'string-replace-loader',
    options: {
        search: 'window\\.MonacoEnvironment = \\{',
        flags: 'm',
        replace: 'window.__deprecated_MonacoEnvironment = {'
    }
}); };
exports.fixEditorLoader = fixEditorLoader;
// module replace
var fixChartLoader = function () { return ({
    loader: 'string-replace-loader',
    options: {
        multiple: [
            {
                search: 'if \\(chartTheme\\) \\{',
                flags: 'm',
                replace: "if (chartTheme) { delete chartTheme.backgroundColor;\n        "
            },
        ]
    }
}); };
exports.fixChartLoader = fixChartLoader;
// fix for isValidApi func
var fixApiUtilLoader = function () { return ({
    loader: 'string-replace-loader',
    options: {
        search: 'function\\sisValidApi\\(api\\)\\s\\{',
        flags: 'm',
        replace: "function isValidApi(api) { return typeof api === \"string\" }\n    function __deprecated_isValidApi(api) {"
    }
}); };
exports.fixApiUtilLoader = fixApiUtilLoader;
// fix amis factory
var fixFactoryLoader = function () { return ({
    loader: 'string-replace-loader',
    options: {
        multiple: [
            {
                // 添加 热跟新支持
                search: '\\~rendererNames\\.indexOf\\(config\\.name\\)',
                flags: 'm',
                replace: '!window.IS_WEBPACK_DEV_SERVER && ~rendererNames.indexOf(config.name)'
            },
            {
                // AMIS全局统一 默认 ENV 环境
                search: ', options, pathPrefix\\) \\{',
                flags: 'm',
                replace: ", opts, pathPrefix) {\n          var options = tslib_1.__assign(window.OVINE_AMIS_ENV, opts);\n        "
            },
            {
                // 去掉多余的请求封装
                search: '\\? [a-zA-Z1-9_]*\\.wrapFetcher\\(options\\.fetcher\\)',
                flags: 'm',
                replace: '? options.fetcher '
            },
            {
                // var react_1 = tslib_1.__importDefault(require("react"));
                search: 'var\\sreact_1\\s=\\stslib_1\\.__importDefault\\(require\\("react"\\)\\);',
                flags: 'm',
                replace: "\n          var react_1 = tslib_1.__importDefault(require(\"react\"));\n          var react_dom_1 = require(\"react-dom\");"
            },
            {
                // SchemaRenderer.prototype.componentWillReceiveProps = function (nextProps) {
                search: 'SchemaRenderer\\.prototype\\.componentWillReceiveProps\\s=\\sfunction\\s\\(nextProps\\)\\s{',
                flags: 'm',
                replace: "\n          SchemaRenderer.prototype.componentDidMount = function () {\n            var dataId = this.props.schema.$dataId;\n            if (dataId && this.ref) {\n              var $dom = react_dom_1.findDOMNode(this.ref);\n              if ($dom) {\n                $dom.dataset.id = dataId;\n              }\n            }\n          };\n          SchemaRenderer.prototype.componentWillReceiveProps = function (nextProps) {\n            var props = this.props;\n            if (props.schema.$dataId !== nextProps.schema.$dataId && this.ref) {\n              var $dom = react_dom_1.findDOMNode(this.ref);\n              if (!$dom) {\n                return\n              }\n              if (nextProps.schema.$dataId) {\n                $dom.dataset.id = nextProps.schema.$dataId;\n              } else {\n                  delete $dom.dataset.id;\n              }\n            }\n        "
            },
        ]
    }
}); };
exports.fixFactoryLoader = fixFactoryLoader;
// fix for "init" is not function
var fixFroalaLoader = function () { return ({
    loader: 'string-replace-loader',
    options: {
        search: '\\.forEach\\(function \\(init\\) \\{ return init\\(\\); \\}\\)',
        flags: 'm',
        replace: ''
    }
}); };
exports.fixFroalaLoader = fixFroalaLoader;
// a:not[href] is not good.
var fixBootStropCss = function () { return ({
    loader: 'string-replace-loader',
    options: {
        multiple: [
            {
                search: 'a\\:not\\(\\[href\\]\\)',
                flags: 'gm',
                replace: '.ignore-anothref'
            },
            {
                search: 'svg \\{',
                flags: 'gm',
                replace: '.ignore-svg {'
            },
        ]
    }
}); };
exports.fixBootStropCss = fixBootStropCss;
var fixFontAwesomeCss = function (_a) {
    var siteDir = _a.siteDir, embedAssets = _a.embedAssets;
    var cdnFaPath = constants_1.dllJsdelivrHostDir + "dll_fontawesome-webfont";
    var base64FaStr = "url('data:application/x-font-woff2;charset=utf-8;base64," + base64Encode(utils_1.getModulePath(siteDir, 'font-awesome/fonts/fontawesome-webfont.woff2', true)) + "') format('woff2')";
    var config = {
        loader: 'string-replace-loader',
        options: {
            multiple: [
                {
                    search: 'src: url\\(.*\\);',
                    flags: 'gm',
                    replace: ''
                },
                {
                    search: '@font-face \\{',
                    flags: 'gm',
                    replace: "@font-face {src: url(../fonts/fontawesome-webfont.eot), url(" + cdnFaPath + ".eot);\n            src: url(../fonts/fontawesome-webfont.eot?#iefix) format('embedded-opentype'), url(" + cdnFaPath + ".eot?#iefix) format('embedded-opentype'), " + (embedAssets
                        ? base64FaStr + ", "
                        : "url(../fonts/fontawesome-webfont.woff2) format('woff2'), url(" + cdnFaPath + ".woff2) format('woff2'), ") + "url(../fonts/fontawesome-webfont.woff) format('woff'), url(" + cdnFaPath + ".woff) format('woff'), url(../fonts/fontawesome-webfont.ttf) format('truetype'), url(" + cdnFaPath + ".ttf) format('truetype'), url(../fonts/fontawesome-webfont.svg#fontawesomeregular) format('svg'), url(" + cdnFaPath + ".svg#fontawesomeregular) format('svg');\n            font-family: 'FontAwesome';\n            font-weight: normal;\n            font-style: normal;\n          }\n          .ignore-font-face {\n          "
                },
            ]
        }
    };
    return config;
};
exports.fixFontAwesomeCss = fixFontAwesomeCss;
