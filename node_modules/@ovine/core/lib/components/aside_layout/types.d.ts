import { RouteItem } from "../../routes/types";
import { ImmerSetter } from "../../utils/hooks";
import { ReqOption } from "../../utils/request/types";
import { LibSchema } from "../amis/schema/types";
export declare type AsideLayoutState = {
    asideFolded: boolean;
    offScreen: boolean;
    header: HeaderProps;
    routes: RouteItem[];
    rootRoute: string;
    resetRoute?: boolean;
    routeTabs?: RouteTabs;
    footer?: LibSchema;
};
export declare type LayoutCommProps = AsideLayoutState & {
    setLayout: ImmerSetter<AsideLayoutState>;
};
export declare type HederBrandProps = {
    logo: string;
    title: string;
    className?: string;
    link?: {
        title?: string;
        href: string;
    };
};
export declare type HeaderProps = {
    brand: HederBrandProps;
    items?: any[];
    showDevItems?: boolean;
};
export declare type RouteTabs = {
    enable?: boolean;
    maxCount?: number;
    storage?: boolean;
};
export declare type LayoutProps = Partial<{
    children: any;
    api: ReqOption;
    routeTabs: RouteTabs;
    header: HeaderProps;
    footer: LibSchema;
    routes: RouteItem[];
    debounceRoute: number;
    resetRoute: boolean;
    rootRoute: string;
}>;
