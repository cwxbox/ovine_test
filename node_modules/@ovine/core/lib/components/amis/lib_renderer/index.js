var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Renderer } from 'amis';
import React from 'react';
const renderers = {};
export const addLibRenderer = (key, renderer) => {
    renderers[key] = renderer;
};
let LibRenderer = class LibRenderer extends React.Component {
    render() {
        const { renderer: key = '', render } = this.props;
        const renderer = renderers[key];
        if (!renderer) {
            return null;
        }
        return render('body', renderer(this.props));
    }
};
LibRenderer = __decorate([
    Renderer({
        test: /(^|\/)lib-renderer/,
        name: 'lib-renderer',
    })
], LibRenderer);
export { LibRenderer };
