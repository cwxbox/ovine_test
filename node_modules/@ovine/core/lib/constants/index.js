/**
 * 项目内常量,禁止重新赋值修改
 */
export const rootRoute = '/';
export const publicUrl = process.env.PUBLIC_PATH || '/';
export const parentKey = 'parent';
export const routeLimitKey = '$page';
export const appRootId = 'app-root';
export const defaultEnvMode = 'localhost';
export const coreStatic = `${publicUrl}static/ovine/core`;
export const strDelimiter = '@##@';
export const defLoadPageSchema = { schema: { type: 'page', body: '当前页面加载错了...' } };
// 屏幕尺寸定义
export const breakpoints = {
    xs: 0,
    sm: 576,
    md: 768,
    lg: 992,
    xl: 1200,
};
// core 需要用的一些关键字均使用 libXXX 开头，防止与开发者业务冲突
// 消息通知相关的 key
export const message = {
    storeRoot: '$store/',
    layoutSpinner: '$store/libLayoutSpinner',
    appTheme: 'libAppThemeMsg',
    appLocale: 'libAppLocaleMsg',
    clearRouteTabs: 'libClearRouteTabsMsg',
    routeTabChange: 'libRouteTabChangeMsg',
    asideLayoutCtrl: {
        msg: 'libAsideLayoutCtrlMsg',
        reload: 'libToggleAsideReloadMsg',
        toggleScreen: 'libToggleAsideScreenMsg',
        toggleFold: 'libToggleAsideFoldMsg',
    },
};
// 存储相关的 key
export const storage = {
    appInstance: 'libAppInsStore',
    userInfo: 'libUserInfoStore',
    appTheme: 'libAppThemeStore',
    appLocale: 'libAppLocaleStore',
    appLimit: 'libAppLimitStore',
    routeTabs: 'libRouteTabsStore',
    routeQuery: 'libRouteQueryStore',
    supportRouteTabs: 'supportRouteTabsStore',
    enableRouteTabs: 'libEnableRouteTabsStore',
    routeData: 'libRouteDataStore',
    dev: {
        code: 'libDevCodeGlobal',
        limit: 'libDevLimitStore',
        api: 'libDevApiStore',
    },
};
